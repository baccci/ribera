import { useState, useEffect } from 'react';
import useCart, {CartState, StoredCart} from 'store/cartStore';
import FilterTag from 'components/FilterTag';
import Layout from 'components/Layout'
import SearchBar from 'components/SearchBar'
import styles from 'styles/Productos.module.css';
import ProductCard from 'components/ProductCard';
import Head from 'next/head';

export async function getStaticProps() {
  const res = await fetch(`http://localhost:3000/api/products`);
  const products = await res.json();

  return {
    props: {
      products,
    },
  }
}

export type Product = {
  name: string,
  cost: number,
  available?: boolean,
  description: string,
  category?: string,
  imagePath: string,
  code: string
}

const Index = ({products}: {products: Product[]}) => {
  const [filteredProducts, setFilteredProducts] = useState(products);
  const [searchValue, setSearchValue] = useState('');

  const addToCart = useCart((state: any) => state.addToCart);
  const updateCart = useCart((state: any) => state.updateCart);
  const removeOneFromCart = useCart((state: any) => state.removeOneFromCart);
  const mycart = useCart((state: any) => state.cartContent);

  const addProduct = (code: string) => {
    const product = products.find((product: Product) => product.code === code);
    const index = mycart.findIndex((item: StoredCart) => item.code === code);
    if (index !== -1) {
      mycart[index].quantity++;
      updateCart({ product, mycart });
    } else {
      addToCart({...product, quantity: 1});
    }
  };

  const deleteProduct = (code: string) => {
    const product = products.find((item: Product) => item.code === code);
    const index = mycart.findIndex((item: StoredCart) => item.code === code);
    if (index !== -1) {
      if(mycart[index].quantity >= 1) {
        mycart[index].quantity--;
        return removeOneFromCart({ product, mycart });
      }
    }
  }

  const [selected, setSelected] = useState({
    todo: true,
    pizzas: false,
    hamburguesas: false,
    empanadas: false,
    bebidas: false
  });

  const handleSelect = (key: string) => {
    setSearchValue('');
    setSelected( (prev) => {
      const newSelected = Object.keys(prev).reduce((acc: any, curr) => {
        acc[curr] = curr === key;
        return acc;
      }
      , {});
      return newSelected;
    });
    if(key !== 'todo') setFilteredProducts(products.filter((product) => product.category === key));
    else setFilteredProducts(products);
  }

  const handleEnter = (e: React.KeyboardEvent<HTMLInputElement>, value: string) => {
    if (e.key === 'Enter') {
      setSearchValue(value);
    }
  }
  const handleSearch = (value: string) => {
    setSearchValue(value);
  }

  useEffect(() => {
    if(searchValue !== ''){
      const filtered = products.filter((product) => {
        const { name, category } = product;
        const nameMatch = name.toLowerCase().includes(searchValue.toLowerCase());
        const categoryMatch = category?.toLowerCase().includes(searchValue.toLowerCase());
        Object.keys(selected).forEach((key) => {
          if(searchValue.toLowerCase() === key.toLowerCase()) {
            setSelected((prev) => {
              const newSelected = Object.keys(prev).reduce((acc: any, curr) => {
                acc[curr] = curr === key;
                return acc;
              }
              , {});
              return newSelected;
            })
          }
        })
        return nameMatch || categoryMatch;
      });
      setFilteredProducts(filtered);
    }else{
      if(selected.todo) setFilteredProducts(products);
    }
  }, [searchValue, products, selected]);


  return (
    <Layout baseLayout>
      <Head>
        <title>Ribera - Productos</title>
      </Head>
      <SearchBar placeholder='Escribí para buscar algún producto de la carta' onKeyDown={handleEnter} handleSearchFunc={handleSearch}/>
      <div className={styles.filtersWrapper}>
        <FilterTag text='Todo' selected={selected.todo} onClick={handleSelect} name='todo'>
          <TodoSVG />
        </FilterTag>
        <FilterTag text='Pizzas' selected={selected.pizzas} onClick={handleSelect} name='pizzas'>
          <PizzaSVG />
        </FilterTag>
        <FilterTag text='Hamburguesas' selected={selected.hamburguesas} onClick={handleSelect} name='hamburguesas'>
          <HamburguesasSVG />
        </FilterTag>
        <FilterTag text='Empanadas' selected={selected.empanadas} onClick={handleSelect} name='empanadas'>
          <EmpanadasSVG />
        </FilterTag>
        <FilterTag text='Bebidas' selected={selected.bebidas} onClick={handleSelect} name='bebidas'>
          <BebidasSVG />
        </FilterTag>
      </div>

      <div className={styles.productsWrapper}>
        {filteredProducts.map((producto) => {

          const {name, description, code, cost, imagePath} = producto;
          
         return <ProductCard title={name} {...{description, imagePath, code}} price={cost} key={name} 
          addFunc={() => addProduct(code)} delFunc={() => deleteProduct(code)}/>
         })}
      </div>
      
    </Layout>
  )
}

export default Index;

const TodoSVG = () => {
  return (
    <svg width="11.607" height="11.633" viewBox="0 0 11.607 11.633">
      <path d="M9.37,5.8l2.736-1.58L10.573,1.567,7.837,3.147V0H4.769V3.147L2.033,1.567.5,4.224,3.235,5.8.5,7.383,2.033,10.04l2.736-1.58v3.172H7.837V8.461l2.736,1.58,1.534-2.657Z" transform="translate(-0.499)" fill="#3d3d3d" />
    </svg>
  )
}

const PizzaSVG = () => {
  return (
    <svg width="14.356" height="15.931" viewBox="0 0 14.356 15.931">
      <g transform="translate(-25.318)">
        <path d="M66.055,72.811l3.087,6.344,6-12.324a18.159,18.159,0,0,0-11.994,0l2.634,5.412" transform="translate(-36.65 -63.764)" fill="#f6a230" />
        <path d="M49.85,8.708c-.423-.115-.911-.023-1.333-.139-.451-.125-.843-.494-1.3-.588s-.964.092-1.428.029-.9-.374-1.37-.406-.942.221-1.411.221h.007c-.47,0-.946-.251-1.411-.221s-.907.344-1.37.406-.97-.123-1.428-.029-.851.463-1.3.588c-.422.117-.91.024-1.333.139l.839,1.724h0a18.159,18.159,0,0,1,11.994,0Z" transform="translate(-10.514 -7.365)" fill="#c66500" />
        <g transform="translate(28.881 3.33)">
          <circle cx="1.451" cy="1.451" r="1.451" fill="#d53349" />
          <circle cx="1.103" cy="1.103" r="1.103" transform="translate(2.509 5.645)" fill="#d53349" />
        </g>
        <path d="M261.022,172.14l-.591.591a.78.78,0,0,0,0,1.1.436.436,0,0,0,.616,0l.159-.159.6.6.76-.76-.6-.6.159-.159a.436.436,0,0,0,0-.616A.78.78,0,0,0,261.022,172.14Z" transform="translate(-227.576 -166.562)" fill="#ffe285" />
        <g transform="translate(25.318)">
          <path d="M258.22,88.773a17.153,17.153,0,0,0-2.139-.153v.473a16.663,16.663,0,0,1,2.079.149Z" transform="translate(-248.901 -85.863)" fill="#53180f" />
          <path d="M39.674,1.19,39.4,1.115a3,3,0,0,0-.721-.077,2.592,2.592,0,0,1-.611-.062,2.593,2.593,0,0,1-.556-.262,2.636,2.636,0,0,0-.761-.33,1.683,1.683,0,0,0-.34-.032,4.4,4.4,0,0,0-.488.036,3.987,3.987,0,0,1-.436.033A1.338,1.338,0,0,1,35.3.41a2.582,2.582,0,0,1-.586-.184,2.643,2.643,0,0,0-.8-.224c-.031,0-.064,0-.1,0a2.965,2.965,0,0,0-.72.118,2.613,2.613,0,0,1-.607.1,2.61,2.61,0,0,1-.607-.1A2.965,2.965,0,0,0,31.168,0c-.033,0-.065,0-.1,0a2.644,2.644,0,0,0-.8.224,2.581,2.581,0,0,1-.586.184,1.342,1.342,0,0,1-.18.011A3.987,3.987,0,0,1,29.07.388a4.4,4.4,0,0,0-.488-.036,1.683,1.683,0,0,0-.34.032,2.637,2.637,0,0,0-.761.33,2.593,2.593,0,0,1-.556.262,2.594,2.594,0,0,1-.611.062,3,3,0,0,0-.721.077l-.275.075.964,1.981.121.248h0l2.513,5.164.425-.207L26.825,3.2l.021-.007q.153-.051.308-.1l.019-.006q.327-.1.658-.192l.006,0q.163-.044.328-.085l.017,0q.161-.04.324-.077l.022-.005q.161-.037.324-.07l.022,0q.163-.034.327-.064l.019,0q.166-.031.333-.058l.011,0q.863-.142,1.742-.2h.015q.167-.011.334-.018h.029l.324-.012h.039l.318-.005h.45l.1,0,.089,0,.1,0,.089,0,.1,0,.09,0,.1,0,.092.005.093.006.1.007.09.006.1.008.086.007.1.009.08.007.113.011.072.007.124.014.06.007.141.017.043.005.173.023h.01q.372.051.741.118H35.7l.176.033.025,0,.157.031.038.008.143.03.046.01.135.03.052.012.128.03.058.014.122.03.062.016.117.03.066.017.113.03.069.019.109.03.072.02.106.03.075.022.1.031.077.024.1.031.079.025.1.031.081.027.056.019-.206.423A17.816,17.816,0,0,0,35.269,3l-.074.467a17.506,17.506,0,0,1,2.55.588L32.492,14.85,29.618,8.943l-.425.207,3.3,6.781L38.7,3.17Zm-13.348.32a2.979,2.979,0,0,0,.725-.079,2.981,2.981,0,0,0,.663-.306,2.256,2.256,0,0,1,.623-.278,1.22,1.22,0,0,1,.245-.022,3.99,3.99,0,0,1,.435.033,4.4,4.4,0,0,0,.489.036A1.809,1.809,0,0,0,29.75.879a2.969,2.969,0,0,0,.7-.213A2.265,2.265,0,0,1,31.1.475l.065,0a2.579,2.579,0,0,1,.605.1A3.008,3.008,0,0,0,32.492.7H32.5a3.007,3.007,0,0,0,.719-.119,2.581,2.581,0,0,1,.605-.1l.065,0a2.264,2.264,0,0,1,.656.191,2.972,2.972,0,0,0,.7.213,1.816,1.816,0,0,0,.243.015,4.393,4.393,0,0,0,.489-.036,3.991,3.991,0,0,1,.435-.033,1.217,1.217,0,0,1,.245.022,2.257,2.257,0,0,1,.623.278,2.98,2.98,0,0,0,.663.306,2.977,2.977,0,0,0,.725.079c.11,0,.216.006.318.014l-.614,1.251-.145-.048-.03-.01-.183-.059-.044-.014L37.828,2.6l-.064-.019-.12-.036-.071-.02-.114-.033-.074-.021-.111-.03-.076-.02-.109-.029-.077-.02L36.9,2.345l-.078-.019L36.716,2.3l-.077-.018-.11-.025-.076-.017-.112-.024L36.265,2.2l-.115-.024-.073-.015-.118-.023-.07-.013L35.768,2.1,35.7,2.091l-.127-.022-.061-.01-.136-.022-.053-.008-.15-.023L35.134,2l-.178-.025-.012,0q-.387-.052-.778-.087l-.028,0-.165-.014-.043,0-.15-.011-.052,0-.141-.009-.058,0L33.4,1.833l-.063,0-.13-.005-.068,0-.125,0-.072,0-.121,0H32.16l-.116,0-.072,0-.125,0-.063,0-.134.006-.054,0-.142.007-.045,0-.151.009-.037,0-.159.012-.029,0-.166.014-.021,0-.174.016h-.014l-.18.019H30.47l-.187.021h0A18.135,18.135,0,0,0,27.5,2.5l-.007,0-.172.05-.048.014-.131.039-.069.021-.11.034-.079.025-.1.032-.084.028-.084.028-.609-1.25C26.109,1.516,26.216,1.513,26.326,1.51Z" transform="translate(-25.318 0)" fill="#53180f" />
          <path d="M133.9,99.429a1.688,1.688,0,1,0,1.688,1.688A1.689,1.689,0,0,0,133.9,99.429Zm0,2.9a1.214,1.214,0,1,1,1.214-1.214A1.216,1.216,0,0,1,133.9,102.331Z" transform="translate(-128.886 -96.335)" fill="#53180f" />
          <path d="M212.845,282.168a1.339,1.339,0,1,0,1.339-1.339A1.341,1.341,0,0,0,212.845,282.168Zm1.339-.866a.866.866,0,1,1-.866.866A.867.867,0,0,1,214.184,281.3Z" transform="translate(-207.01 -272.091)" fill="#53180f" />
          <path d="M252.912,166.635a.672.672,0,0,0,.942.008l.6.6,1.095-1.1-.6-.6a.673.673,0,0,0-.008-.943,1.017,1.017,0,0,0-1.438,0l-.591.591A1.018,1.018,0,0,0,252.912,166.635Zm.335-1.1.591-.591a.544.544,0,0,1,.769,0,.2.2,0,0,1,0,.282l-.326.327.6.6-.426.426-.6-.6-.326.326a.2.2,0,0,1-.282,0A.545.545,0,0,1,253.246,165.532Z" transform="translate(-245.542 -159.195)" fill="#53180f" />
        </g>
      </g>
    </svg>
  )
}

const HamburguesasSVG = () => {
  return (
    <svg width="19.793" height="14.5" viewBox="0 0 19.793 14.5">
      <g transform="translate(0 -7.354)">
        <path d="M18.994,31.085H1.72a.722.722,0,0,1-.72-.72H1a.722.722,0,0,1,.72-.72H18.994a.722.722,0,0,1,.72.72h0A.722.722,0,0,1,18.994,31.085Z" transform="translate(-0.64 -14.27)" fill="#b85133" />
        <path d="M17.994,23.085H.72a.722.722,0,0,1-.72-.72H0a.722.722,0,0,1,.72-.72H17.994a.722.722,0,0,1,.72.72h0A.722.722,0,0,1,17.994,23.085Z" transform="translate(0 -9.149)" fill="#b85133" />
        <path d="M20.354,27.085H2.72a.722.722,0,0,1-.72-.72H2a.722.722,0,0,1,.72-.72H20.354a.722.722,0,0,1,.72.72h0A.722.722,0,0,1,20.354,27.085Z" transform="translate(-1.28 -11.709)" fill="#6a3311" />
        <path d="M5.444,17.354v1.319h0a.99.99,0,0,0,1.947.251.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.915,0,.033.033,0,0,1,.064,0,.99.99,0,0,0,1.947-.251h0V17.354Z" transform="translate(-3.485 -6.401)" fill="#88c057" />
        <path d="M20.834,33.539V32.22h0a.99.99,0,0,0-1.947-.251.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0,.99.99,0,0,0-1.915,0,.033.033,0,0,1-.064,0A.99.99,0,0,0,5,32.22H5v1.319Z" transform="translate(-3.201 -15.284)" fill="#659c35" />
        <path d="M11.725,7.354h3.959a5.143,5.143,0,0,1,4.793,3.287.984.984,0,0,1-.719,1.382.939.939,0,0,1-.127.009H3.82a.939.939,0,0,1-.127-.009.984.984,0,0,1-.719-1.382A5.142,5.142,0,0,1,7.767,7.354Z" transform="translate(-1.849)" fill="#d99f4c" />
        <path d="M34.883,14.793a.361.361,0,0,1-.2-.06l-1.08-.72a.36.36,0,1,1,.4-.6l1.08.72a.36.36,0,0,1-.2.659Z" transform="translate(-21.408 -3.841)" fill="#efdfa0" />
        <path d="M22.8,10.794a.359.359,0,0,1-.321-.521l.36-.72a.36.36,0,0,1,.644.322l-.36.72A.36.36,0,0,1,22.8,10.794Z" transform="translate(-14.367 -1.28)" fill="#efdfa0" />
        <path d="M11.8,13.794a.359.359,0,0,1-.321-.521l.36-.72a.36.36,0,1,1,.644.322l-.36.72A.36.36,0,0,1,11.8,13.794Z" transform="translate(-7.326 -3.201)" fill="#efdfa0" />
        <path d="M19.6,34.646H3.788a.722.722,0,0,0-.72.72,4.756,4.756,0,0,0,4.666,3.959h7.917a4.756,4.756,0,0,0,4.666-3.959A.722.722,0,0,0,19.6,34.646Z" transform="translate(-1.964 -17.47)" fill="#d99f4c" />
        <path d="M12.473,39.085a.361.361,0,0,1-.2-.06l-1.08-.72a.36.36,0,0,1,.4-.6l1.08.72a.36.36,0,0,1-.2.659Z" transform="translate(-7.063 -19.391)" fill="#efdfa0" />
        <path d="M24.754,41.085a.36.36,0,0,1-.322-.2l-.36-.72a.36.36,0,1,1,.644-.322l.36.72a.36.36,0,0,1-.321.521Z" transform="translate(-15.384 -20.67)" fill="#efdfa0" />
        <path d="M32.394,39.085a.359.359,0,0,1-.321-.521l.36-.72a.36.36,0,0,1,.644.322l-.36.72A.36.36,0,0,1,32.394,39.085Z" transform="translate(-20.506 -19.391)" fill="#efdfa0" />
      </g>
    </svg>
  )
}

const EmpanadasSVG = () => {
  return (
    <svg width="21.614" height="11.65" viewBox="0 0 21.614 11.65">
      <g transform="translate(-0.691 -5.675)">
        <path d="M9.28,7.24a2.353,2.353,0,0,1,4.436,0,2.384,2.384,0,0,1,1.555-.592A2.311,2.311,0,0,1,17.6,9c0,.19.019.226.224.187a2.214,2.214,0,0,1,2.287.841,2.24,2.24,0,0,1,.281,2.423c-.077.178-.1.238.126.293a2.322,2.322,0,0,1-.556,4.579q-8.469,0-16.937,0a2.323,2.323,0,0,1-.556-4.581c.185-.046.23-.073.139-.272a2.216,2.216,0,0,1,.269-2.441,2.224,2.224,0,0,1,2.33-.835c.116.023.184.054.181-.127A2.22,2.22,0,0,1,6.67,6.9a2.251,2.251,0,0,1,2.5.257l.107.079m9.791,9.36c.276,0,.552,0,.827.01.207.008.264-.093.241-.277-.033-.259-.051-.52-.094-.777a8.678,8.678,0,0,0-6.58-6.965l-.061-.01c-.045-.051-.105-.042-.162-.041a2.626,2.626,0,0,0-.613-.112,8.045,8.045,0,0,0-3.017.145.987.987,0,0,0-.133.017,8.652,8.652,0,0,0-5.085,3.456,8.456,8.456,0,0,0-1.536,4.305c-.014.18.049.265.238.258.276-.01.552-.007.828-.01.246,0,.492,0,.738.011.123,0,.152-.05.154-.158a4.191,4.191,0,0,1,.087-.687,6.706,6.706,0,0,1,13.275.686c.012.129.056.164.177.159.238-.01.477-.008.716-.01m-7.6.008H12.64c1.546,0,3.091,0,4.637,0,.16,0,.221-.019.193-.2-.038-.258-.067-.517-.128-.771a6,6,0,0,0-11.816.771c-.016.183.031.2.192.2q2.879-.007,5.757,0M11.5,6.384A1.617,1.617,0,0,0,9.935,7.577c-.034.138-.046.21.155.177a8.7,8.7,0,0,1,2.825,0c.18.029.181-.027.148-.166A1.618,1.618,0,0,0,11.5,6.384m-2.532,1.6a1.6,1.6,0,0,0-2.038-.422A1.539,1.539,0,0,0,6.162,9.3a9.59,9.59,0,0,1,2.81-1.317m7.885,1.331A1.608,1.608,0,0,0,15.81,7.454a1.532,1.532,0,0,0-1.768.536,9.407,9.407,0,0,1,2.815,1.326m2.776,3.024a1.579,1.579,0,0,0-.051-1.844,1.6,1.6,0,0,0-1.732-.585c-.112.036-.163.059-.048.163a9.449,9.449,0,0,1,1.831,2.266m-16.27,0a9.416,9.416,0,0,1,1.831-2.267c.119-.106.059-.131-.051-.162a1.6,1.6,0,0,0-1.78,2.429m17.48,4a1.6,1.6,0,0,0,.687-1.762,1.579,1.579,0,0,0-1.368-1.165,9.3,9.3,0,0,1,.681,2.927M2.836,13.406a1.61,1.61,0,0,0-1.414,1.377,1.5,1.5,0,0,0,.734,1.524,9.279,9.279,0,0,1,.68-2.9" fill="#40120f" />
        <path d="M11.475,16.608q-2.879,0-5.757,0c-.161,0-.208-.022-.192-.2a6,6,0,0,1,11.816-.771c.061.253.09.513.128.771.028.185-.033.2-.193.2-1.546,0-3.091,0-4.637,0H11.475m3.715-.756c.246,0,.493,0,.739,0a.342.342,0,0,0,.368-.336.332.332,0,0,0-.345-.359c-.507-.011-1.014-.01-1.521,0a.344.344,0,0,0-.361.348.352.352,0,0,0,.382.349c.246.005.492,0,.738,0m-2.247-.005a1.225,1.225,0,0,0,.2,0,.347.347,0,0,0,.251-.5c-.091-.185-.258-.2-.437-.2s-.344.021-.432.209c-.124.266.067.495.417.491" fill="#f5b400" />
        <path d="M13.4,8.58l.061.01c.01.073.069.092.124.115a9.174,9.174,0,0,1,1.713.948,8.922,8.922,0,0,1,1.659,1.51A8.719,8.719,0,0,1,18.4,13.51a8.339,8.339,0,0,1,.671,3.089c-.239,0-.477,0-.716.01-.121.006-.165-.03-.177-.158A6.706,6.706,0,0,0,4.9,15.764a4.317,4.317,0,0,0-.087.687c0,.109-.03.164-.153.158-.246-.01-.492-.008-.739-.01a5.426,5.426,0,0,1,.086-1.064,8.855,8.855,0,0,1,2.382-4.773A9.12,9.12,0,0,1,9.386,8.7c.079-.035.182-.03.226-.125a8.087,8.087,0,0,1,3.017-.146,2.609,2.609,0,0,1,.613.113c.044.052.1.043.162.04" fill="#ffc821" />
        <path d="M9.612,8.573c-.045.1-.147.091-.226.126a9.092,9.092,0,0,0-2.994,2.063A8.848,8.848,0,0,0,4.01,15.536,5.35,5.35,0,0,0,3.924,16.6c-.276,0-.552,0-.827.009-.19.007-.253-.078-.239-.258a8.448,8.448,0,0,1,1.537-4.305A8.646,8.646,0,0,1,9.479,8.59a.987.987,0,0,1,.133-.017" fill="#fdd866" />
        <path d="M19.071,16.6a8.364,8.364,0,0,0-.671-3.09,8.676,8.676,0,0,0-1.44-2.346A8.814,8.814,0,0,0,15.3,9.654a9.006,9.006,0,0,0-1.713-.948c-.055-.023-.114-.043-.124-.115a8.679,8.679,0,0,1,6.58,6.965c.043.257.062.518.094.777.023.184-.033.286-.24.277-.276-.011-.552-.007-.828-.01" fill="#f4b300" />
        <path d="M11.5,6.384a1.619,1.619,0,0,1,1.559,1.205c.033.139.032.195-.148.166a8.7,8.7,0,0,0-2.825,0c-.2.033-.189-.039-.154-.177A1.616,1.616,0,0,1,11.5,6.384" fill="#f2b100" />
        <path d="M8.972,7.985A9.59,9.59,0,0,0,6.162,9.3a1.539,1.539,0,0,1,.772-1.739,1.6,1.6,0,0,1,2.038.422" fill="#f1b100" />
        <path d="M16.857,9.316A9.413,9.413,0,0,0,14.043,7.99a1.531,1.531,0,0,1,1.768-.536,1.606,1.606,0,0,1,1.046,1.862" fill="#f2b100" />
        <path d="M19.633,12.34A9.449,9.449,0,0,0,17.8,10.074c-.115-.1-.064-.127.049-.163a1.606,1.606,0,0,1,1.732.585,1.579,1.579,0,0,1,.05,1.844" fill="#f0b000" />
        <path d="M3.363,12.34a1.611,1.611,0,0,1,.985-2.454,1.634,1.634,0,0,1,.8.025c.11.031.17.056.051.163A9.43,9.43,0,0,0,3.363,12.34" fill="#f0b000" />
        <path d="M20.843,16.34a9.3,9.3,0,0,0-.681-2.927,1.579,1.579,0,0,1,1.368,1.165,1.6,1.6,0,0,1-.687,1.762" fill="#f1b000" />
        <path d="M2.836,13.406a9.279,9.279,0,0,0-.68,2.9,1.5,1.5,0,0,1-.734-1.524,1.61,1.61,0,0,1,1.414-1.377" fill="#f1b000" />
        <path d="M13.4,8.58c-.058,0-.118.012-.162-.04a.186.186,0,0,1,.162.04" fill="#f4b300" />
        <path d="M15.191,15.852c-.247,0-.493,0-.739,0a.351.351,0,0,1-.382-.349.345.345,0,0,1,.361-.348c.507-.008,1.014-.009,1.521,0a.331.331,0,0,1,.345.359.342.342,0,0,1-.368.336c-.247.005-.493,0-.738,0" fill="#40120f" />
        <path d="M12.943,15.847c-.35,0-.541-.225-.417-.491.088-.188.253-.209.432-.209s.346.017.437.2a.347.347,0,0,1-.251.5,1.225,1.225,0,0,1-.2,0" fill="#40120f" />
      </g>
    </svg>
  )
}

const BebidasSVG = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="10.46" height="17.674" viewBox="0 0 10.46 17.674">
      <g transform="translate(-102.446)">
        <g transform="translate(102.798 0.352)">
          <rect width="9.756" height="1.268" transform="translate(0 3.311)" fill="#e6e6e6" />
          <path d="M132.6,140.073l.31,3.252.565,5.919.307,3.22h5.972l.307-3.22.565-5.919.31-3.252Z" transform="translate(-131.889 -135.493)" fill="#c1272d" />
          <rect width="1.135" height="3.274" transform="translate(4.935)" fill="#754c24" />
        </g>
        <g transform="translate(102.446)">
          <path d="M112.554,3.311H109.22V.352A.352.352,0,0,0,108.868,0h-1.135a.352.352,0,0,0-.352.352V3.311H102.8a.352.352,0,0,0-.352.352V4.932a.352.352,0,0,0,.352.352h.389l1.152,12.072a.352.352,0,0,0,.35.319h5.972a.352.352,0,0,0,.35-.319l1.152-12.072h.389a.352.352,0,0,0,.352-.352V3.663A.352.352,0,0,0,112.554,3.311ZM108.085.7h.431V3.274h-.431Zm2.257,16.266H105.01L103.895,5.284h7.563ZM103.15,4.58V4.015H112.2V4.58Z" transform="translate(-102.446)" />
          <path d="M171.176,210.923l.058.644a.352.352,0,0,0,.35.32h.032a.352.352,0,0,0,.319-.382l-.058-.644a.352.352,0,0,0-.7.064Z" transform="translate(-168.755 -203.127)" />
          <path d="M178.13,283.761a.352.352,0,0,0-.319.382l.443,4.887a.352.352,0,0,0,.35.32h.032a.352.352,0,0,0,.319-.382l-.443-4.887A.352.352,0,0,0,178.13,283.761Z" transform="translate(-175.156 -273.769)" />
        </g>
      </g>
    </svg>
  )
}