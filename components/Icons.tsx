import { cn } from '@/lib/tailwindClassMerge'
import React from 'react'

interface LogoProps {
  className?: string
  color?: string
  width?: number
  height?: number
}

export const LogoIcon: React.FC<LogoProps> = ({ className, color = 'currentColor', width = '100', height = '56' }) => {
  return (
    <svg width={width} height={height} viewBox="0 0 100 56" fill="none" className={className}>
      <path d="M48.3249 50.2987C48.3079 50.2888 48.1455 50.4089 48.1267 50.4188C47.9795 50.5084 47.8306 50.598 47.6834 50.6876C47.2265 50.974 46.7463 51.2216 46.2479 51.4278C45.7435 51.6303 45.2231 51.7906 44.6922 51.9073C43.5116 52.1826 42.297 52.2834 41.0872 52.2066C39.8642 52.0851 38.6781 51.7195 37.5992 51.1314C36.5204 50.5434 35.5708 49.7449 34.8068 48.7833C33.8956 47.7235 33.0821 46.5838 32.3762 45.3779C30.7909 42.5998 29.4531 39.7007 28.0697 36.8196C27.1043 34.8023 27.1294 34.8677 29.0862 33.7995C34.8382 30.6576 38.1004 25.8631 38.3561 19.2522C38.5885 13.2309 33.6009 7.48295 26.9481 6.01504C23.5271 5.21074 19.9664 5.20491 16.5427 5.99802C13.119 6.79113 9.92436 8.36183 7.20696 10.5881C3.29784 13.6225 0.667233 17.5979 0.202481 22.689C-0.0496892 24.6173 0.405902 26.5715 1.48496 28.1902C2.56403 29.8089 4.19353 30.9824 6.07199 31.4937C12.4816 33.286 19.5139 28.1313 19.6745 21.4567C19.7217 20.3204 19.5069 19.1884 19.0465 18.1481C18.8107 17.6417 18.5064 17.1701 18.1421 16.7465C17.8751 16.4459 17.5821 16.1694 17.2664 15.9203C16.9563 15.6447 16.6123 15.4098 16.2427 15.2213C16.2041 15.2033 16.1664 15.1845 16.1288 15.1657C16.1288 15.1657 15.97 15.5125 15.9215 15.6138L15.4594 16.5825L14.7919 17.9832L14.5021 18.5917C14.6447 18.6739 14.7828 18.7636 14.9157 18.8606C15.0478 18.9642 15.17 19.0796 15.2809 19.2056C15.4772 19.4219 15.6372 19.6686 15.7546 19.936C15.9745 20.4942 16.0792 21.091 16.0624 21.6906C16.0624 21.713 16.0624 21.7354 16.0624 21.7578C16.0399 22.5718 15.8503 23.3725 15.5052 24.1103C14.8495 25.547 13.7323 26.724 12.3309 27.4547C10.1049 28.5955 7.77668 28.799 5.67453 27.2154C3.4369 25.5298 3.48804 23.1218 3.98779 20.6645C4.05861 20.3732 4.15499 20.0886 4.27579 19.8141C5.77163 16.1688 8.5513 13.1964 12.0904 11.4574C16.2944 9.13066 21.2206 8.46755 25.8912 9.59967C26.6655 9.78428 27.2649 9.97068 26.6844 11.0765C23.4625 17.2215 20.7449 23.6075 17.8092 29.8896C16.6519 32.6609 15.0627 35.2318 13.1007 37.5069C10.1399 40.6668 6.58699 42.4241 2.1225 41.6239C1.89713 41.5734 1.6751 41.509 1.45767 41.4312L0.000610352 44.7631C0.000610352 44.7631 0.510222 44.9898 0.634037 45.0221C1.72971 45.3017 2.85602 45.4438 3.98689 45.4451C5.10257 45.4225 6.21108 45.2611 7.28681 44.9647C9.004 44.5283 10.6398 43.819 12.1317 42.8642C13.6493 41.877 15.0156 40.6753 16.188 39.2965C18.7064 36.3715 20.1536 32.8514 21.7749 29.4281C24.3768 23.9265 26.9508 18.4053 29.5465 12.9038C30.2517 11.4072 30.3216 11.4072 31.6145 12.505C33.1536 13.7326 34.1965 15.4745 34.5511 17.4097C35.6116 23.4623 30.8609 30.3878 24.7069 31.7482C24.3902 31.8181 23.7433 32.035 23.7433 32.035C23.3885 32.6653 23.099 33.3301 22.8793 34.0191C22.9266 34.3241 23.0252 34.6189 23.1709 34.891C25.3753 39.6434 27.6435 44.3607 30.1108 48.9903C30.9389 50.6207 32.1059 52.0557 33.5339 53.1993C34.9619 54.343 36.6178 55.1689 38.3911 55.6219C38.9163 55.7529 39.4495 55.8499 39.9872 55.9122C42.7341 56.1936 45.5029 55.6564 47.9445 54.3681C49.1591 53.7233 50.2978 52.9451 51.3396 52.048L48.3249 50.2933" fill={color} />
      <path d="M94.7113 34.2046C93.602 34.3205 92.5829 34.8677 91.8744 35.728C91.6921 36.012 91.451 36.2536 91.1672 36.4364C90.8834 36.6193 90.5637 36.7391 90.2295 36.7878C89.8954 36.8364 89.5546 36.8129 89.2304 36.7186C88.9062 36.6244 88.606 36.4617 88.3501 36.2415C86.0174 34.77 84.0938 35.0308 82.1729 37.0284C81.9775 37.2863 81.7316 37.502 81.4503 37.6623C81.169 37.8225 80.858 37.9241 80.5362 37.9608C80.2144 37.9975 79.8885 37.9686 79.5783 37.8758C79.268 37.783 78.9798 37.6282 78.7312 37.4209C76.3931 35.9709 74.5242 36.2254 72.5486 38.2337C72.3635 38.483 72.1306 38.693 71.8634 38.8514C71.5962 39.0099 71.3002 39.1137 70.9925 39.1567C70.6847 39.1997 70.3715 39.1812 70.0711 39.1021C69.7706 39.023 69.4889 38.885 69.2424 38.6961C66.6638 37.1377 64.9627 37.3779 62.8318 39.5242C62.6468 39.7592 62.4167 39.9552 62.1552 40.1007C61.8936 40.2461 61.6056 40.3382 61.3081 40.3716C61.0106 40.4049 60.7094 40.3789 60.422 40.2949C60.1347 40.211 59.8669 40.0708 59.6342 39.8826C57.122 38.3188 55.3554 38.5527 53.2327 40.7143C52.8608 41.1893 52.3153 41.4975 51.7161 41.5711C51.1168 41.6447 50.5128 41.4777 50.0368 41.1068C47.4475 39.5573 45.7509 39.7742 43.6182 41.9133C43.4393 42.1546 43.2128 42.3568 42.9526 42.5072C42.6924 42.6576 42.4041 42.7531 42.1055 42.7878C41.8069 42.8224 41.5043 42.7956 41.2165 42.7088C40.9287 42.6221 40.6618 42.4773 40.4322 42.2834C39.5176 41.5619 38.357 41.2259 37.1978 41.3469C37.0336 41.3494 36.8717 41.3854 36.7219 41.4526C36.5722 41.5197 36.4377 41.6167 36.3267 41.7376C36.2158 41.8585 36.1307 42.0007 36.0767 42.1556C36.0227 42.3105 36.0009 42.4747 36.0126 42.6383C36.0029 42.7902 36.0265 42.9424 36.0817 43.0842C36.1369 43.2261 36.2224 43.3542 36.3322 43.4597C36.4421 43.5652 36.5736 43.6456 36.7176 43.6952C36.8617 43.7448 37.0148 43.7624 37.1664 43.7469C37.8155 43.7587 38.4491 43.9467 38.9994 44.2908C41.7807 45.8143 43.2234 45.6351 45.5364 43.383C45.8926 42.9593 46.3931 42.6823 46.9416 42.6052C47.49 42.5281 48.0477 42.6564 48.5071 42.9654C51.4625 44.6134 52.776 44.4692 55.1527 42.1795C55.5275 41.7398 56.0563 41.4597 56.6311 41.3966C57.2058 41.3335 57.7829 41.492 58.2444 41.8398C60.9423 43.4359 62.4613 43.2271 64.7617 40.9867C65.1376 40.5458 65.6678 40.2648 66.244 40.201C66.8202 40.1373 67.3991 40.2955 67.8625 40.6435C70.5352 42.227 72.1341 42.0522 74.2703 39.9077C74.6368 39.4298 75.1757 39.1137 75.7721 39.0266C76.3685 38.9396 76.9753 39.0885 77.4635 39.4417C80.1874 41.027 81.648 40.8263 84.0202 38.6352C84.3762 38.2107 84.8814 37.9385 85.432 37.8745C85.9827 37.8105 86.537 37.9595 86.981 38.291C87.8044 38.9317 88.8173 39.2813 89.861 39.2849C90.8367 39.3314 91.7952 39.0164 92.5526 38.4004C93.4714 37.6476 94.2304 36.7255 95.4668 36.3849C95.5991 36.3377 95.7199 36.2627 95.8209 36.1651C95.9219 36.0675 96.0009 35.9494 96.0525 35.8188C96.1042 35.6883 96.1273 35.5482 96.1204 35.4079C96.1134 35.2677 96.0766 35.1306 96.0123 35.0057C95.9263 34.7393 95.7471 34.5127 95.5076 34.3674C95.268 34.2221 94.9841 34.1678 94.7077 34.2144" fill={color} />
      <path d="M95.2191 25.329C94.9169 26.2406 94.3129 27.0223 93.5064 27.5452C92.9905 27.8857 92.3714 28.1904 91.8447 27.7584C91.2795 27.2942 91.8125 26.7431 92.0134 26.2744C93.9747 21.6879 95.9315 17.0995 97.9466 12.5372C97.9843 12.4476 98.0166 12.3732 98.0462 12.297L98.4688 11.4636H94.6404L94.2457 12.3669L94.2367 12.3777L94.2161 12.4019L94.1712 12.3589L94.155 12.3427L94.1335 12.3221L94.1075 12.2979L94.0761 12.2702L94.0402 12.2397L93.9998 12.2056L93.955 12.1689L93.9047 12.1304L93.85 12.09L93.7917 12.0488L93.7289 12.0058L93.6616 11.9628L93.5898 11.9189L93.5145 11.8758L93.4346 11.8328L93.3512 11.7907L93.2614 11.7495L93.1717 11.7101L93.0766 11.6724L92.977 11.6375L92.8738 11.6052L92.768 11.5756L92.6576 11.5496L92.5437 11.5272C92.5051 11.5201 92.4656 11.5147 92.427 11.5093C92.3885 11.5039 92.3472 11.4995 92.3068 11.4959C92.2664 11.4923 92.2252 11.4896 92.1839 11.4869C92.1426 11.4842 92.0996 11.4869 92.0574 11.4869C92.0152 11.4869 91.9677 11.4869 91.9282 11.4869C91.8887 11.4869 91.8385 11.4914 91.7954 11.495C91.7523 11.4986 91.7057 11.5039 91.6599 11.5093C91.6142 11.5147 91.5702 11.5228 91.5218 11.5308C91.4733 11.5389 91.4275 11.5487 91.38 11.5586C91.3324 11.5685 91.284 11.581 91.2355 11.5944C91.1871 11.6079 91.1378 11.6222 91.0893 11.6384C91.0086 11.6643 90.8686 11.6993 90.8686 11.6993C90.375 11.85 89.901 12.0585 89.4564 12.3203C87.443 13.5743 85.9014 15.4582 85.0718 17.6785C83.656 20.815 82.3425 24.0009 80.9859 27.1661C80.7434 27.8772 80.3847 28.5434 79.9245 29.1376C79.5369 29.5696 79.0524 29.9065 78.4773 29.5857C77.9488 29.2927 78.2467 28.7792 78.3616 28.3723C78.503 27.8952 78.6726 27.4269 78.8694 26.9698C80.2062 23.7437 81.5879 20.5354 82.8799 17.2913C83.8668 14.8161 82.687 13.2801 80.0151 13.4378L78.4109 13.5275C78.6684 12.7747 79.2866 11.1975 79.3153 11.1204H76.0809C76.0737 11.1374 72.6607 18.8677 71.7348 20.9315C70.9444 22.6925 70.1198 24.4373 69.2289 26.1498C68.592 27.4861 67.7772 28.7302 66.8065 29.8483C65.8251 30.9723 64.4832 31.7209 63.0104 31.9659C62.5006 32.0699 61.9715 32.0242 61.487 31.8345C61.0026 31.6448 60.5835 31.3191 60.2802 30.8968C60.0877 30.4888 60.0186 30.0336 60.0812 29.587C60.1438 29.1403 60.3355 28.7216 60.6328 28.3822C61.242 27.7129 62.0298 27.2313 62.9036 26.994C63.7596 26.7153 64.6505 26.5459 65.4912 26.2296C66.8777 25.6293 68.0968 24.7005 69.0429 23.5236C69.989 22.3467 70.6337 20.9571 70.921 19.4753C71.2573 18.3694 71.1412 17.1755 70.598 16.155C70.1051 15.4636 69.3737 14.9788 68.5443 14.7937C67.4671 14.5951 66.3569 14.6753 65.3194 15.0265C64.282 15.3777 63.3518 15.9883 62.6174 16.8002C61.169 18.4407 60.0428 20.339 59.2978 22.3958C58.1242 25.1515 57.0323 27.952 55.6094 30.5867C55.071 31.5832 54.3111 32.6694 53.1797 32.7375C54.4029 29.7951 55.6743 26.873 56.9937 23.9713C57.5736 22.8637 57.9707 21.6699 58.17 20.4359C58.2635 19.8174 58.2041 19.1853 57.9971 18.5949C57.79 18.0045 57.4416 17.4736 56.9821 17.0485C55.8508 16.3298 54.4848 16.0767 53.1708 16.3423C54.098 14.1301 55.2776 12.0321 56.686 10.0898C56.8517 9.80624 57.1029 9.58228 57.4038 9.44994C57.7857 9.3824 58.1793 9.45326 58.5136 9.64979C61.244 11.0022 64.2589 11.6822 67.3062 11.633C69.058 11.5262 70.7495 10.9542 72.2058 9.97599C72.9626 9.49921 73.612 8.87071 74.113 8.13028C74.614 7.38984 74.9557 6.55358 75.1164 5.67443C75.1972 5.00193 75.1519 4.32027 74.9827 3.66435C74.4408 1.48669 72.6814 0.525108 70.5532 0.185464C70.0153 0.0785604 69.4694 0.0165118 68.9212 -4.03998e-05C64.8317 -0.0197429 60.8642 1.39009 57.7061 3.98517C57.3794 4.31299 56.957 4.52896 56.4997 4.60206C56.0424 4.67516 55.5736 4.60163 55.1608 4.39203C53.5751 3.77537 51.9249 3.33917 50.2414 3.0917C47.9628 2.64982 45.6022 2.95791 43.5137 3.96972C41.4253 4.98153 39.7217 6.64252 38.6585 8.70344C38.0589 9.80957 37.8395 11.0817 38.034 12.3245C38.2285 13.5672 38.8262 14.7118 39.7351 15.5824C40.7699 16.3318 42.0016 16.7625 43.2784 16.8212C44.5553 16.88 45.8214 16.5643 46.9208 15.913C47.4415 15.6017 47.852 15.136 48.0951 14.5807C48.3383 14.0254 48.402 13.4082 48.2774 12.815C48.2141 12.4139 48.0139 12.0469 47.7107 11.7763C47.4076 11.5057 47.0201 11.3481 46.614 11.3301C46.0376 11.2536 45.4516 11.358 44.9372 11.6289C44.4228 11.8997 44.0054 12.3236 43.7429 12.8419C43.5525 13.1917 43.402 13.5617 43.2943 13.9451C43.1382 14.4093 43.5348 15.1334 42.6851 15.2633C42.3595 15.2988 42.0305 15.2435 41.7345 15.1035C41.4384 14.9635 41.1871 14.7443 41.0082 14.4702C39.9621 13.2156 39.9998 11.6778 41.0352 9.87562C43.533 5.52925 49.7174 5.52836 53.3314 7.51783C53.9379 7.85209 53.7467 8.15141 53.4614 8.57888C51.2184 11.9233 49.8672 15.698 48.2702 19.3525C46.5718 23.24 44.9174 27.1491 43.1956 31.0231C42.7284 32.2446 41.9429 33.3191 40.9203 34.1355C40.4627 34.4671 39.9235 34.7825 39.4058 34.4366C38.8083 34.0378 39.1582 33.4293 39.3448 32.94C39.6454 32.1496 40.0267 31.3897 40.3632 30.61C41.709 27.5004 43.0548 24.3898 44.4391 21.1789L45.9886 17.5942L42.1638 17.6346L41.2281 19.805C41.2083 19.8516 41.1886 19.8947 41.1697 19.9448C39.7208 23.5546 38.1489 27.1141 36.594 30.6853C36.1605 31.6387 35.8297 32.6355 35.6071 33.6587C35.0598 36.375 36.4307 38.0616 39.16 38.0894C40.5737 38.1284 41.953 37.6504 43.0386 36.7451C43.3975 36.4503 43.6442 36.2227 44.1915 36.5247C45.1375 37.0525 46.2218 37.2806 47.3005 37.1786C48.3792 37.0766 49.4015 36.6495 50.2315 35.9538C50.9098 35.4708 51.3458 35.0577 51.9532 36.0273C52.2134 36.4404 52.8235 36.4064 53.3475 36.332C54.5891 36.1205 55.73 35.5167 56.6026 34.6096C56.9426 34.2879 57.1678 33.9366 57.8497 34.2153C60.0388 35.1969 62.5048 35.3741 64.812 34.7158C67.1193 34.0574 69.1194 32.6057 70.459 30.6172C71.3616 29.3593 72.1189 28.0034 72.7164 26.5755C74.1124 23.3727 75.5309 20.1787 76.8803 16.9562C77.3423 15.8521 78.2692 15.9543 78.9986 16.1828C79.8177 16.4391 79.2956 17.1874 79.0991 17.7062C78.7985 18.4984 78.4226 19.2611 78.1041 20.047C76.9834 22.8206 75.4806 25.4392 74.6552 28.3284C74.3928 29.0132 74.3379 29.7599 74.4975 30.4756C74.657 31.1913 75.0239 31.8442 75.5524 32.353C76.1172 32.818 76.8001 33.1173 77.5251 33.2178C78.25 33.3183 78.9887 33.2159 79.6589 32.9221C80.1607 32.7064 80.6283 32.4187 81.0469 32.0681C81.3627 31.844 81.561 31.5116 82.0724 31.7652C83.0985 32.3025 84.264 32.5152 85.4141 32.375C86.5641 32.2348 87.6442 31.7483 88.5107 30.9801C88.9001 30.6799 89.1388 30.7651 89.5497 30.9595C90.4964 31.4364 91.5638 31.6208 92.6158 31.4889C93.6678 31.3571 94.6566 30.915 95.456 30.2193C97.8874 28.2836 98.9793 25.5118 99.9941 22.653C97.6479 22.4147 95.971 23.0384 95.2138 25.3236M62.7995 22.9998C63.5424 21.3276 64.1274 19.5532 65.5746 18.2986C65.7964 18.0943 66.071 17.9561 66.3674 17.8997C66.6638 17.8433 66.97 17.871 67.2515 17.9796C67.4136 18.0454 67.55 18.1622 67.64 18.3122C67.7299 18.4622 67.7687 18.6373 67.7503 18.8112C67.84 20.7828 65.2758 23.5205 63.3154 23.585C62.8363 23.6003 62.6058 23.4381 62.8005 22.9998M69.525 3.62492C70.3163 3.70199 71.1947 3.91527 71.4289 4.82308C71.5131 5.26934 71.4474 5.73088 71.242 6.13601C71.0366 6.54114 70.703 6.86718 70.293 7.06347C69.0929 7.80285 67.6769 8.11314 66.2771 7.9435C64.2411 7.83785 62.2445 7.34097 60.3968 6.48008C62.9407 4.35724 66.2242 3.32998 69.5259 3.62402M49.7964 31.3735C49.5678 31.9231 49.2152 32.4125 48.766 32.8034C48.3169 33.1944 47.7833 33.4764 47.207 33.6274C46.1115 33.5261 46.3098 32.7922 46.5278 32.2007C46.9917 30.9461 47.5399 29.7165 48.0719 28.4843C48.8794 26.6141 49.6654 24.7321 50.5348 22.8896C51.0496 21.6876 51.9634 20.6996 53.1223 20.0918C53.3044 19.9556 53.5249 19.8806 53.7524 19.8773C53.9798 19.8741 54.2024 19.9429 54.3883 20.0739C54.7803 20.4198 54.5103 20.8509 54.3703 21.1798C52.907 24.6058 51.589 28.0981 49.7946 31.3735M87.1658 27.6536C86.9606 27.9372 86.7063 28.1818 86.4149 28.3759C85.8765 28.7621 85.2243 29.1278 84.6357 28.651C84.0633 28.1868 84.432 27.555 84.6851 27.0128C86.2013 23.7661 87.4664 20.4037 89.1612 17.2447C89.3596 16.7862 89.6479 16.3719 90.0091 16.0264C90.3703 15.6809 90.797 15.4111 91.2643 15.2328C92.1031 14.964 92.6648 15.1522 92.5203 16.2007C92.5198 16.2507 92.5126 16.3005 92.4988 16.3486C92.2859 16.8265 92.0765 17.3072 91.8708 17.7905L91.8089 17.9321C90.4137 21.2479 89.1594 24.6282 87.1578 27.6563" fill={color} />
    </svg>
  )
}

interface YellowLineProps {
  className?: string
  width?: number
  height?: number
}

export const YellowLine: React.FC<YellowLineProps> = ({ className, width = 440, height }) => {
  return (
    <svg width={width} height={height} viewBox="0 0 440 18" fill="none" className={className}>
      <path d="M436.302 2.18491H436.217C433.148 2.1691 430.195 3.35897 427.991 5.49964L423.81 9.56096C423.012 10.3251 421.952 10.7516 420.849 10.7516C419.746 10.7516 418.685 10.3251 417.887 9.56096L413.554 5.34494C411.338 3.22127 408.391 2.03612 405.326 2.03612C402.26 2.03612 399.313 3.22127 397.097 5.34494L392.921 9.40626C392.124 10.1724 391.063 10.6002 389.958 10.6002C388.854 10.6002 387.793 10.1724 386.996 9.40626L382.661 5.19123C380.455 3.05068 377.502 1.86054 374.433 1.87549C371.365 1.86133 368.413 3.0514 366.208 5.19123L362.032 9.25355C361.223 9.99519 360.167 10.4064 359.07 10.4064C357.974 10.4064 356.917 9.99519 356.108 9.25355L351.775 5.03752C349.56 2.91294 346.612 1.72717 343.546 1.72717C340.481 1.72717 337.533 2.91294 335.318 5.03752L331.142 9.09984C330.344 9.86368 329.283 10.2899 328.18 10.2899C327.077 10.2899 326.016 9.86368 325.218 9.09984L320.884 4.88381C318.679 2.74344 315.726 1.55303 312.657 1.56708C309.588 1.55213 306.634 2.74226 304.429 4.88281L300.248 8.94513C299.439 9.68621 298.383 10.0971 297.287 10.0971C296.191 10.0971 295.135 9.68621 294.326 8.94513L289.993 4.7281C287.777 2.60352 284.83 1.41775 281.764 1.41775C278.699 1.41775 275.751 2.60352 273.536 4.7281L269.362 8.78443C268.564 9.54879 267.503 9.97533 266.399 9.97533C265.296 9.97533 264.234 9.54879 263.437 8.78443L259.103 4.5724C256.89 2.44452 253.942 1.25648 250.876 1.25648C247.809 1.25648 244.861 2.44452 242.648 4.5724L238.467 8.63372C237.669 9.39756 236.608 9.82376 235.505 9.82376C234.402 9.82376 233.341 9.39756 232.543 8.63372L228.262 4.39872C226.612 2.81617 224.544 1.74242 222.302 1.30534C220.061 0.86826 217.741 1.08626 215.62 1.93339C214.183 2.49631 212.873 3.34089 211.765 4.41769L209.149 6.98084L207.628 8.45905C206.82 9.20076 205.763 9.6121 204.667 9.6121C203.571 9.6121 202.515 9.20076 201.706 8.45905L197.371 4.24402C195.156 2.12002 192.208 0.934621 189.143 0.934621C186.078 0.934621 183.131 2.12002 180.916 4.24402L176.735 8.30534C175.926 9.0474 174.869 9.45895 173.773 9.45895C172.676 9.45895 171.62 9.0474 170.811 8.30534L166.477 4.0933C164.273 1.95129 161.319 0.759696 158.25 0.773578C155.178 0.758651 152.224 1.95033 150.018 4.0933L145.842 8.15363C145.033 8.89569 143.976 9.30723 142.88 9.30723C141.784 9.30723 140.727 8.89569 139.918 8.15363L135.584 3.9346C133.37 1.80682 130.422 0.618878 127.355 0.618878C124.288 0.618878 121.34 1.80682 119.127 3.9346L114.95 7.99493C114.154 8.76082 113.092 9.18841 111.988 9.18841C110.885 9.18841 109.823 8.76082 109.026 7.99493L104.693 3.77989C102.479 1.65182 99.5309 0.463692 96.464 0.463692C93.3971 0.463692 90.4488 1.65182 88.2349 3.77989L84.0599 7.84221C83.2619 8.60605 82.2011 9.03225 81.0979 9.03225C79.9946 9.03225 78.9338 8.60605 78.1358 7.84221L73.8055 3.62419C71.5915 1.49687 68.6435 0.309234 65.5769 0.309234C62.5104 0.309234 59.5624 1.49687 57.3483 3.62419L53.1723 7.68651C52.3746 8.4508 51.3137 8.87731 50.2103 8.87731C49.1069 8.87731 48.046 8.4508 47.2482 7.68651L42.9149 3.46848C40.6998 1.34403 37.7527 0.158321 34.6873 0.158321C31.622 0.158321 28.6748 1.34403 26.4597 3.46848L22.2787 7.5298C21.4818 8.2957 20.4206 8.72329 19.3167 8.72329C18.2128 8.72329 17.1516 8.2957 16.3547 7.5298L12.0253 3.31677C9.79244 1.15165 6.7962 -0.0402573 3.69023 0.00103835C2.71766 -0.00480405 1.78259 0.376839 1.09059 1.06206C0.398597 1.74728 0.00631685 2.67999 0 3.65513C0.0224746 4.62532 0.426354 5.54731 1.12368 6.22032C1.82101 6.89332 2.7553 7.26282 3.72308 7.24834H3.75792C4.87483 7.24541 5.94985 7.67441 6.75928 8.44607L11.0926 12.6581C13.3079 14.7821 16.255 15.9675 19.3202 15.9675C22.3854 15.9675 25.3324 14.7821 27.5478 12.6581L31.7288 8.59679C32.5377 7.85472 33.5944 7.44318 34.6908 7.44318C35.7872 7.44318 36.8439 7.85472 37.6529 8.59679L41.9862 12.8118C44.2019 14.9351 47.1488 16.1201 50.2138 16.1201C53.2787 16.1201 56.2257 14.9351 58.4414 12.8118L62.6224 8.7505C63.431 8.00857 64.4873 7.59709 65.5834 7.59709C66.6795 7.59709 67.7358 8.00857 68.5444 8.7505L72.8688 12.9635C75.0841 15.0883 78.0316 16.2743 81.0974 16.2743C84.1631 16.2743 87.1106 15.0883 89.326 12.9635L93.501 8.90121C94.298 8.13502 95.3594 7.70724 96.4635 7.70724C97.5677 7.70724 98.6291 8.13502 99.4261 8.90121L103.759 13.1172C105.973 15.245 108.921 16.433 111.988 16.433C115.055 16.433 118.003 15.245 120.217 13.1172L124.393 9.05592C125.191 8.29208 126.251 7.86588 127.355 7.86588C128.458 7.86588 129.519 8.29208 130.317 9.05592L134.65 13.2719C136.866 15.3963 139.813 16.5819 142.879 16.5819C145.944 16.5819 148.892 15.3963 151.107 13.2719L155.288 9.21063C156.085 8.44532 157.146 8.01809 158.249 8.01809C159.353 8.01809 160.413 8.44532 161.21 9.21063L165.546 13.4277C167.759 15.5554 170.707 16.7434 173.774 16.7434C176.841 16.7434 179.789 15.5554 182.003 13.4277L186.179 9.36533C186.977 8.60195 188.038 8.17606 189.141 8.17606C190.244 8.17606 191.305 8.60195 192.103 9.36533L196.436 13.5804C198.651 15.705 201.598 16.8909 204.664 16.8909C207.729 16.8909 210.676 15.705 212.891 13.5804L217.072 9.52004C217.462 9.14325 217.921 8.84566 218.423 8.6437C219.185 8.34569 220.015 8.27191 220.817 8.43104C221.62 8.59018 222.36 8.9756 222.951 9.542L227.286 13.757C229.501 15.8806 232.448 17.0657 235.513 17.0657C238.579 17.0657 241.525 15.8806 243.741 13.757L247.922 9.69571C248.731 8.95365 249.788 8.5421 250.884 8.5421C251.981 8.5421 253.037 8.95365 253.846 9.69571L258.179 13.9107C260.395 16.0351 263.342 17.2207 266.408 17.2207C269.474 17.2207 272.421 16.0351 274.637 13.9107L278.813 9.85042C279.609 9.08511 280.67 8.65788 281.774 8.65788C282.877 8.65788 283.938 9.08511 284.735 9.85042L289.07 14.0664C291.285 16.1915 294.233 17.3776 297.299 17.3776C300.364 17.3776 303.312 16.1915 305.527 14.0664L309.703 10.0051C310.5 9.23923 311.561 8.81164 312.665 8.81164C313.769 8.81164 314.83 9.23923 315.627 10.0051L319.961 14.2202C322.176 16.3443 325.124 17.5297 328.189 17.5297C331.255 17.5297 334.202 16.3443 336.418 14.2202L340.599 10.1578C341.397 9.39435 342.457 8.96837 343.56 8.96837C344.663 8.96837 345.723 9.39435 346.521 10.1578L350.854 14.3739C353.07 16.498 356.017 17.6834 359.083 17.6834C362.148 17.6834 365.096 16.498 367.311 14.3739L371.492 10.3115C372.289 9.54565 373.351 9.11806 374.454 9.11806C375.558 9.11806 376.62 9.54565 377.416 10.3115L381.749 14.5276C383.955 16.6679 386.908 17.8583 389.977 17.8443C393.041 17.8559 395.988 16.6668 398.19 14.5306L402.366 10.4682C403.164 9.70441 404.225 9.27821 405.328 9.27821C406.431 9.27821 407.492 9.70441 408.29 10.4682L412.623 14.6843C414.837 16.8121 417.785 18 420.852 18C423.919 18 426.867 16.8121 429.081 14.6843L433.256 10.623C434.05 9.85079 435.114 9.42089 436.22 9.42522H436.277C437.244 9.43918 438.178 9.06965 438.875 8.39697C439.573 7.72429 439.977 6.80286 440 5.83301C439.992 4.85778 439.597 3.9258 438.904 3.24191C438.21 2.55803 437.274 2.1772 436.302 2.18491Z" fill="#FFB000" />
    </svg>
  )
}

interface CartIconProps {
  color?: string
  size?: number | string
}

export const CartIcon: React.FC<CartIconProps> = ({ color = 'currentColor', size = 24 }) => {
  const cartSize = typeof size === 'number' ? `${size}px` : size
  const height = typeof size === 'number' ? size * 1.125 : undefined

  return (
    <svg width={cartSize} height={height} viewBox="0 0 24 27" fill="none">
      <path d="M21.456 7.26929H2.32915L1.39478 25.6641H22.3948L21.456 7.26929Z" stroke={color} strokeWidth="2.65343" strokeMiterlimit="10" />
      <path d="M17.5742 7.26937C17.5742 5.78278 16.976 4.35708 15.911 3.3059C14.8461 2.25473 13.4018 1.66418 11.8958 1.66418C10.3897 1.66418 8.94539 2.25473 7.88047 3.3059C6.81555 4.35708 6.21729 5.78278 6.21729 7.26937" stroke={color} strokeWidth="2.65343" strokeMiterlimit="10" />
    </svg>
  )
}

interface InstagramIconProps {
  color?: string
  size?: number
}

export const InstagramIcon: React.FC<InstagramIconProps> = ({ color = 'currentColor', size = 20 }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 20 20" fill="none">
      <path d="M10.0005 0C7.27963 0 6.94414 0.0126596 5.87751 0.0601329C5.04778 0.0781929 4.22704 0.236196 3.44991 0.527482C2.78275 0.777711 2.17823 1.1705 1.67854 1.67845C1.17011 2.17775 0.777233 2.78234 0.52751 3.44973C0.236654 4.2265 0.079346 5.04689 0.0622461 5.87615C0.00949517 6.94377 0 7.27925 0 10C0 12.7208 0.0126602 13.0594 0.0601361 14.1228C0.0777403 14.952 0.235033 15.7723 0.5254 16.5492C0.776443 17.2164 1.16996 17.8209 1.67854 18.3205C2.17777 18.8298 2.78235 19.2237 3.44991 19.4746C4.2269 19.7649 5.04722 19.9221 5.87646 19.9399C6.94308 19.9894 7.2828 20 9.99947 20C12.7161 20 13.059 19.9873 14.1225 19.9399C14.9517 19.9219 15.772 19.7646 16.549 19.4746C17.2137 19.2179 17.8173 18.825 18.3211 18.3212C18.8249 17.8174 19.2178 17.2138 19.4746 16.5492C19.765 15.7723 19.9223 14.952 19.9399 14.1228C19.9894 13.0562 20 12.7165 20 10C20 7.28347 19.9873 6.94061 19.9399 5.8772C19.9219 5.04803 19.7647 4.22778 19.4746 3.45079C19.2234 2.78362 18.8299 2.17918 18.3215 1.6795C17.8224 1.17054 17.2177 0.777285 16.5501 0.527482C15.7733 0.23672 14.9528 0.0794228 14.1235 0.0622429C13.0559 0.00949467 12.7172 0 10.0005 0ZM10.0005 1.79977C12.6697 1.79977 12.9883 1.81348 14.0423 1.85885C14.6762 1.86657 15.304 1.98363 15.8981 2.20487C16.3304 2.37007 16.7229 2.62459 17.0502 2.9518C17.3774 3.27901 17.6319 3.67156 17.7971 4.10381C18.0174 4.69804 18.1338 5.32577 18.1411 5.95949C18.1885 7.01445 18.1991 7.33094 18.1991 10.0011C18.1991 12.6712 18.1864 12.9887 18.1379 14.0426C18.1262 14.6766 18.0074 15.3039 17.7866 15.8983C17.624 16.3324 17.3683 16.7256 17.0375 17.0503C16.7143 17.3815 16.3215 17.6366 15.8875 17.7972C15.2911 18.0175 14.6612 18.1338 14.0254 18.1412C12.9641 18.1886 12.6539 18.1992 9.97626 18.1992C7.29862 18.1992 6.98739 18.1865 5.9271 18.138C5.29073 18.1263 4.66087 18.0075 4.06393 17.7867C3.62978 17.626 3.23718 17.3701 2.91502 17.0377C2.58045 16.7167 2.32386 16.3233 2.1649 15.8878C1.94462 15.2911 1.82621 14.6617 1.81463 14.0257C1.77665 12.9708 1.76399 12.6543 1.76399 9.98945C1.76399 7.32461 1.77771 7.00074 1.81463 5.93839C1.82609 5.30247 1.9445 4.673 2.1649 4.07638C2.32136 3.63928 2.5783 3.24504 2.91502 2.92541C3.23403 2.58945 3.6276 2.33323 4.06393 2.17744C4.65577 1.95524 5.2813 1.83606 5.91338 1.82509C6.97579 1.78711 7.28491 1.7755 9.96255 1.7755L10.0005 1.80082V1.79977ZM10.0005 4.86444C8.98496 4.86444 7.99221 5.16557 7.1478 5.72976C6.30339 6.29394 5.64525 7.09585 5.25661 8.03405C4.86797 8.97226 4.76629 10.0046 4.96441 11.0006C5.16254 11.9966 5.65158 12.9115 6.36969 13.6296C7.0878 14.3477 8.00273 14.8367 8.99878 15.0348C9.99483 15.2329 11.0273 15.1312 11.9655 14.7426C12.9038 14.354 13.7057 13.6959 14.2699 12.8515C14.8342 12.0072 15.1353 11.0145 15.1353 9.99894C15.1353 8.63719 14.5943 7.33121 13.6314 6.3683C12.6684 5.40539 11.3624 4.86444 10.0005 4.86444ZM10.0005 13.3326C9.34115 13.3326 8.69658 13.1371 8.14833 12.7708C7.60008 12.4045 7.17277 11.8838 6.92044 11.2747C6.66811 10.6655 6.60209 9.99525 6.73073 9.34858C6.85936 8.7019 7.17688 8.1079 7.64313 7.64167C8.10938 7.17545 8.70342 6.85795 9.35012 6.72932C9.99683 6.60068 10.6672 6.6667 11.2763 6.91902C11.8855 7.17134 12.4062 7.59863 12.7725 8.14685C13.1389 8.69507 13.3344 9.3396 13.3344 9.99894C13.3345 10.4368 13.2484 10.8703 13.0809 11.2749C12.9134 11.6794 12.6678 12.0469 12.3582 12.3565C12.0486 12.6661 11.6811 12.9117 11.2765 13.0792C10.872 13.2466 10.4384 13.3328 10.0005 13.3326ZM16.5416 4.66188C16.5416 4.89912 16.4713 5.13103 16.3395 5.32829C16.2077 5.52554 16.0203 5.67928 15.8011 5.77007C15.582 5.86086 15.3408 5.88461 15.1081 5.83833C14.8754 5.79205 14.6616 5.67781 14.4939 5.51005C14.3261 5.3423 14.2119 5.12857 14.1656 4.89589C14.1193 4.66321 14.1431 4.42204 14.2338 4.20286C14.3246 3.98368 14.4784 3.79634 14.6757 3.66454C14.8729 3.53274 15.1048 3.46239 15.3421 3.46239C15.6598 3.46351 15.9641 3.59049 16.1883 3.81551C16.4126 4.04054 16.5385 4.34526 16.5385 4.66294L16.5416 4.66188Z" fill={color} />
    </svg>
  )
}

interface WhatsappIconProps {
  color?: string
  size?: number
}

export const WhatsappIcon: React.FC<WhatsappIconProps> = ({ color = 'currentColor', size = 20 }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 20 20" fill="none">
      <path d="M14.5872 11.9749C14.338 11.8503 13.1142 11.2514 12.8905 11.168C12.6667 11.0846 12.496 11.0444 12.3295 11.2926C12.163 11.5408 11.6869 12.0985 11.5416 12.2633C11.3964 12.428 11.2511 12.4492 11.0019 12.3256C10.2681 12.0338 9.59073 11.6175 8.99981 11.0951C8.45459 10.5939 7.98714 10.0147 7.61277 9.37666C7.4675 9.12845 7.59793 8.99432 7.71882 8.87074C7.8397 8.74716 7.96802 8.58134 8.09208 8.43664C8.19448 8.31073 8.27838 8.17097 8.34128 8.02155C8.37446 7.95319 8.3899 7.87764 8.3862 7.80181C8.38249 7.72597 8.35976 7.65227 8.32007 7.58745C8.25751 7.46282 7.76017 6.2429 7.55233 5.74648C7.34449 5.25006 7.14407 5.32928 6.99243 5.32399C6.84079 5.31871 6.68172 5.31554 6.51524 5.31554C6.38903 5.31872 6.26487 5.34796 6.1506 5.40141C6.03634 5.45487 5.93446 5.53137 5.85141 5.62607C5.57007 5.89167 5.34735 6.21272 5.19746 6.56878C5.04757 6.92484 4.97378 7.3081 4.9808 7.69412C5.06217 8.62908 5.41517 9.5202 5.99669 10.2586C7.06466 11.8521 8.52995 13.142 10.249 14.0018C10.7122 14.2009 11.1858 14.3751 11.6678 14.5236C12.1754 14.6779 12.7122 14.7116 13.2351 14.6218C13.5818 14.5514 13.91 14.4104 14.1993 14.2075C14.4886 14.0047 14.7325 13.7444 14.9159 13.4431C15.0793 13.0728 15.1298 12.6629 15.0612 12.2643C14.9997 12.1587 14.8332 12.0996 14.584 11.9749M10.0454 18.1516C8.5622 18.1516 7.10631 17.7543 5.8302 17.0014L5.52798 16.8229L2.39443 17.6425L3.22687 14.5996L3.02963 14.2827C2.05524 12.7334 1.62533 10.9056 1.80746 9.08642C1.9896 7.26727 2.77345 5.55996 4.03584 4.23283C5.29822 2.9057 6.96756 2.03399 8.78148 1.7547C10.5954 1.47541 12.4511 1.80438 14.0569 2.6899C15.6627 3.57542 16.9275 4.9673 17.6526 6.64676C18.3778 8.32623 18.522 10.1981 18.0628 11.9681C17.6036 13.7381 16.5669 15.306 15.1156 16.4253C13.6644 17.5446 11.8809 18.1519 10.0454 18.1516ZM17.093 2.88627C15.382 1.19267 13.1126 0.174457 10.7054 0.0204344C8.29821 -0.133588 5.91662 0.587028 4.0022 2.04866C2.08778 3.5103 0.770438 5.61379 0.294424 7.9691C-0.181589 10.3244 0.216026 12.7718 1.41354 14.8573L0 20L5.2809 18.6206C6.74137 19.4132 8.37796 19.8286 10.0411 19.8289C12.011 19.8271 13.9361 19.244 15.5735 18.1533C17.2109 17.0626 18.4871 15.5131 19.241 13.7005C19.9949 11.8878 20.1928 9.89337 19.8095 7.96886C19.4263 6.04435 18.4791 4.27609 17.0876 2.88732L17.093 2.88627Z" fill={color} />
    </svg>
  )
}

interface LensIconProps {
  color?: string
  size?: number
  className?: string
}

export const LensIcon: React.FC<LensIconProps> = ({ color = 'currentColor', size = 20, className }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 20 20" className={className}>
      <g transform="translate(-2 -2)">
        <circle cx="8" cy="8" r="8" transform="translate(3 3)" fill="none" stroke={color} strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" />
        <line x1="4.35" y1="4.35" transform="translate(16.65 16.65)" fill="none" stroke={color} strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" />
      </g>
    </svg>
  )
}

export const TodoIcon = () => {
  return (
    <svg width="11" height="11" viewBox="0 0 11 11">
      <path d="M9.37,5.8l2.736-1.58L10.573,1.567,7.837,3.147V0H4.769V3.147L2.033,1.567.5,4.224,3.235,5.8.5,7.383,2.033,10.04l2.736-1.58v3.172H7.837V8.461l2.736,1.58,1.534-2.657Z" transform="translate(-0.499)" fill="#3d3d3d" />
    </svg>
  )
}

export const PizzaIcon = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" viewBox="0 0 24 28" fill="none">
      <path d="M22.76 4.33C19.62 2.42 15.94 1.3 12 1.3C8.05999 1.3 4.36999 2.42 1.23999 4.33L0.789993 4.55L12 27.43L23.21 4.55L22.76 4.33Z" fill="#F8AE15" />
      <path d="M23.21 4.49C23.21 4.49 18.4 1.33 12 1.33C5.59999 1.33 0.789993 4.49 0.789993 4.49L2.40999 7.84C5.19999 6.14 8.46999 5.14 11.98 5.14C15.49 5.14 18.76 6.14 21.56 7.84" fill="#C56516" />
      <path d="M23.27 3.56C22.63 3.14 22.17 3.24 21.81 3.32C21.51 3.39 21.28 3.44 20.8 3.22C20.65 3.15 20.45 2.9 20.26 2.66C19.93 2.24 19.55 1.76 18.97 1.57C18.5 1.41 18 1.53 17.52 1.65C17.16 1.74 16.79 1.83 16.51 1.77C16.3 1.72 16.03 1.5 15.77 1.29C15.38 0.96 14.93 0.6 14.37 0.53C13.85 0.47 13.37 0.7 12.92 0.93C12.6 1.09 12.27 1.25 12.01 1.25C11.75 1.25 11.42 1.09 11.1 0.93C10.64 0.7 10.16 0.47 9.65 0.53C9.09 0.6 8.64 0.97 8.25 1.29C7.99 1.5 7.73 1.72 7.52 1.77C7.25 1.83 6.88 1.74 6.51 1.65C6.03 1.53 5.53 1.41 5.06 1.57C4.47 1.77 4.1 2.24 3.77 2.66C3.58 2.9 3.38 3.15 3.23 3.22C2.75 3.44 2.51 3.39 2.21 3.32C1.85 3.24 1.39 3.14 0.749997 3.56C0.519997 3.71 0.459997 4.02 0.609997 4.25C0.699997 4.39 0.819997 4.55 0.819997 4.55L2.42 7.82L2.88 7.58C5.73 6.06 8.8 5.29 12.01 5.29C15.23 5.29 18.31 6.07 21.17 7.6L21.63 7.84L23.24 4.56C23.24 4.56 23.36 4.39 23.45 4.26C23.6 4.03 23.54 3.72 23.31 3.57L23.27 3.56ZM21.15 6.48C18.27 5.03 15.19 4.29 11.97 4.29C8.77 4.29 5.7 5.02 2.83 6.46L1.75 4.25C1.81 4.25 1.88 4.27 1.96 4.29C2.32 4.37 2.82 4.48 3.61 4.12C3.98 3.95 4.25 3.61 4.52 3.27C4.78 2.94 5.04 2.61 5.35 2.5C5.55 2.43 5.9 2.52 6.24 2.6C6.69 2.71 7.21 2.84 7.71 2.72C8.15 2.62 8.51 2.32 8.86 2.03C9.16 1.78 9.47 1.52 9.74 1.49C9.97 1.47 10.31 1.63 10.64 1.79C11.04 1.99 11.5 2.22 12 2.22C12.5 2.22 12.95 1.99 13.36 1.79C13.69 1.63 14.03 1.46 14.25 1.49C14.52 1.52 14.83 1.78 15.13 2.03C15.48 2.32 15.84 2.62 16.28 2.72C16.78 2.83 17.3 2.72 17.75 2.6C18.09 2.52 18.45 2.43 18.65 2.5C18.96 2.6 19.22 2.94 19.48 3.27C19.74 3.6 20.02 3.95 20.39 4.12C21.18 4.48 21.68 4.37 22.04 4.29C22.12 4.27 22.19 4.26 22.25 4.25L21.16 6.47L21.15 6.48Z" fill="#933D0D" />
      <path d="M14.91 14.29C16.1195 14.29 17.1 13.3095 17.1 12.1C17.1 10.8905 16.1195 9.91 14.91 9.91C13.7005 9.91 12.72 10.8905 12.72 12.1C12.72 13.3095 13.7005 14.29 14.91 14.29Z" fill="#DD5F69" stroke="#DD5F69" strokeWidth="0.5" strokeMiterlimit="10" />
      <path d="M12 20.59C12.7953 20.59 13.44 19.9453 13.44 19.15C13.44 18.3547 12.7953 17.71 12 17.71C11.2047 17.71 10.56 18.3547 10.56 19.15C10.56 19.9453 11.2047 20.59 12 20.59Z" fill="#DD5F69" stroke="#DD5F69" strokeWidth="0.5" strokeMiterlimit="10" />
      <path d="M8.78999 12.62L8.09999 13.39C7.77999 13.75 7.84999 14.33 8.25999 14.7L8.27999 14.72C8.40999 14.83 8.58999 14.84 8.68999 14.72L9.10999 14.26L10.12 15.17L10.78 14.44L9.76999 13.53L10.19 13.07C10.29 12.96 10.27 12.78 10.14 12.67L10.12 12.65C9.70999 12.28 9.11999 12.27 8.79999 12.63L8.78999 12.62Z" fill="#FFDC78" stroke="#FFDC78" strokeWidth="0.5" strokeMiterlimit="10" />
      <path d="M7.59999 7.95L7.34999 6.98C8.85999 6.58 10.45 6.42 12 6.39C12.49 6.39 12.98 6.41 13.45 6.45L13.37 7.45C11.46 7.3 9.46999 7.47 7.59999 7.96V7.95Z" fill="#933D0D" />
      <path d="M4.92999 8.88L4.51999 7.97C4.92999 7.79 5.34999 7.62 5.76999 7.47L6.10999 8.41C5.70999 8.55 5.30999 8.71 4.92999 8.88Z" fill="#933D0D" />
    </svg>
  )
}

export const HamburguesasIcon = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" viewBox="0 0 25 26" fill="none">
      <path d="M23.41 15.1771H2.1C1.46487 15.1771 0.949997 15.692 0.949997 16.3271C0.949997 16.9623 1.46487 17.4771 2.1 17.4771H23.41C24.0451 17.4771 24.56 16.9623 24.56 16.3271C24.56 15.692 24.0451 15.1771 23.41 15.1771Z" fill="#C56516" />
      <path d="M22.44 12.8771H2.63C1.99487 12.8771 1.48 13.392 1.48 14.0271C1.48 14.6623 1.99487 15.1771 2.63 15.1771H22.44C23.0751 15.1771 23.59 14.6623 23.59 14.0271C23.59 13.392 23.0751 12.8771 22.44 12.8771Z" fill="#933D0D" />
      <path d="M23.17 10.7271H1.50001C0.864879 10.7271 0.350006 11.242 0.350006 11.8771C0.350006 12.5123 0.864879 13.0271 1.50001 13.0271H23.17C23.8051 13.0271 24.32 12.5123 24.32 11.8771C24.32 11.242 23.8051 10.7271 23.17 10.7271Z" fill="#C56516" />
      <path d="M21.98 9.63714C21.54 9.63714 21.15 9.85714 20.91 10.1971C20.68 9.85714 20.29 9.63714 19.84 9.63714C19.39 9.63714 19.01 9.85714 18.77 10.1971C18.54 9.85714 18.15 9.63714 17.7 9.63714C17.25 9.63714 16.87 9.85714 16.63 10.1971C16.4 9.85714 16.01 9.63714 15.56 9.63714C15.11 9.63714 14.73 9.85714 14.49 10.1971C14.26 9.85714 13.87 9.63714 13.42 9.63714C12.97 9.63714 12.59 9.85714 12.35 10.1971C12.12 9.85714 11.73 9.63714 11.28 9.63714C10.83 9.63714 10.45 9.85714 10.21 10.1971C9.97999 9.85714 9.58999 9.63714 9.13999 9.63714C8.68999 9.63714 8.30999 9.85714 8.06999 10.1971C7.83999 9.85714 7.44999 9.63714 6.99999 9.63714C6.54999 9.63714 6.16999 9.85714 5.92999 10.1971C5.69999 9.85714 5.30999 9.63714 4.85999 9.63714C4.40999 9.63714 4.02999 9.85714 3.78999 10.1971C3.55999 9.85714 3.16999 9.63714 2.71999 9.63714C2.00999 9.63714 1.42999 10.2171 1.42999 10.9271C1.42999 11.6371 2.00999 12.2171 2.71999 12.2171C3.15999 12.2171 3.54999 11.9971 3.78999 11.6571C4.01999 11.9971 4.40999 12.2171 4.85999 12.2171C5.30999 12.2171 5.68999 11.9971 5.92999 11.6571C6.15999 11.9971 6.54999 12.2171 6.99999 12.2171C7.44999 12.2171 7.82999 11.9971 8.06999 11.6571C8.29999 11.9971 8.68999 12.2171 9.13999 12.2171C9.58999 12.2171 9.96999 11.9971 10.21 11.6571C10.44 11.9971 10.83 12.2171 11.28 12.2171C11.73 12.2171 12.11 11.9971 12.35 11.6571C12.58 11.9971 12.97 12.2171 13.42 12.2171C13.87 12.2171 14.25 11.9971 14.49 11.6571C14.72 11.9971 15.11 12.2171 15.56 12.2171C16.01 12.2171 16.39 11.9971 16.63 11.6571C16.86 11.9971 17.25 12.2171 17.7 12.2171C18.15 12.2171 18.53 11.9971 18.77 11.6571C19 11.9971 19.39 12.2171 19.84 12.2171C20.29 12.2171 20.67 11.9971 20.91 11.6571C21.14 11.9971 21.53 12.2171 21.98 12.2171C22.69 12.2171 23.27 11.6371 23.27 10.9271C23.27 10.2171 22.69 9.63714 21.98 9.63714Z" fill="#88BF57" />
      <path d="M22.6 10.9371H2.4C1.08 10.9371 0 9.79714 0 8.38714C0 4.32714 3.09 1.03714 6.89 1.03714H18.11C21.92 1.03714 25 4.32714 25 8.37714C25 9.78714 23.93 10.9271 22.6 10.9271V10.9371Z" fill="#F8AE15" />
      <path d="M3.02 18.6571C3.46 18.6571 3.85 18.4371 4.09 18.0971C4.32 18.4371 4.71 18.6571 5.16 18.6571C5.61 18.6571 5.99 18.4371 6.23 18.0971C6.46 18.4371 6.85 18.6571 7.3 18.6571C7.75 18.6571 8.13 18.4371 8.37 18.0971C8.6 18.4371 8.99 18.6571 9.44 18.6571C9.89 18.6571 10.27 18.4371 10.51 18.0971C10.74 18.4371 11.13 18.6571 11.58 18.6571C12.03 18.6571 12.41 18.4371 12.65 18.0971C12.88 18.4371 13.27 18.6571 13.72 18.6571C14.17 18.6571 14.55 18.4371 14.79 18.0971C15.02 18.4371 15.41 18.6571 15.86 18.6571C16.31 18.6571 16.69 18.4371 16.93 18.0971C17.16 18.4371 17.55 18.6571 18 18.6571C18.45 18.6571 18.83 18.4371 19.07 18.0971C19.3 18.4371 19.69 18.6571 20.14 18.6571C20.59 18.6571 20.97 18.4371 21.21 18.0971C21.44 18.4371 21.83 18.6571 22.28 18.6571C22.99 18.6571 23.57 18.0771 23.57 17.3671C23.57 16.6571 22.99 16.0771 22.28 16.0771C21.84 16.0771 21.45 16.2971 21.21 16.6371C20.98 16.2971 20.59 16.0771 20.14 16.0771C19.69 16.0771 19.31 16.2971 19.07 16.6371C18.84 16.2971 18.45 16.0771 18 16.0771C17.55 16.0771 17.17 16.2971 16.93 16.6371C16.7 16.2971 16.31 16.0771 15.86 16.0771C15.41 16.0771 15.03 16.2971 14.79 16.6371C14.56 16.2971 14.17 16.0771 13.72 16.0771C13.27 16.0771 12.89 16.2971 12.65 16.6371C12.42 16.2971 12.03 16.0771 11.58 16.0771C11.13 16.0771 10.75 16.2971 10.51 16.6371C10.28 16.2971 9.89 16.0771 9.44 16.0771C8.99 16.0771 8.61 16.2971 8.37 16.6371C8.14 16.2971 7.75 16.0771 7.3 16.0771C6.85 16.0771 6.47 16.2971 6.23 16.6371C6 16.2971 5.61 16.0771 5.16 16.0771C4.71 16.0771 4.33 16.2971 4.09 16.6371C3.86 16.2971 3.47 16.0771 3.02 16.0771C2.31 16.0771 1.73 16.6571 1.73 17.3671C1.73 18.0771 2.31 18.6571 3.02 18.6571Z" fill="#88BF57" />
      <path d="M2.94999 17.9471H22.05C23.3 17.9471 24.32 18.8171 24.32 19.8871C24.32 22.9671 21.4 25.4571 17.8 25.4571H7.19999C3.59999 25.4571 0.679993 22.9671 0.679993 19.8871C0.679993 18.8171 1.68999 17.9471 2.94999 17.9471Z" fill="#F8AE15" />
      <path d="M5.32566 2.27748L4.5116 4.19156C4.38191 4.4965 4.52192 4.84796 4.82432 4.97657C5.12671 5.10518 5.47699 4.96224 5.60668 4.6573L6.42074 2.74322C6.55043 2.43828 6.41042 2.08682 6.10802 1.95821C5.80563 1.8296 5.45535 1.97254 5.32566 2.27748Z" fill="#FFEDA1" />
      <path d="M9.07809 1.11461L10.1181 2.91595C10.2838 3.20292 10.6488 3.30237 10.9334 3.13806C11.218 2.97376 11.3143 2.60792 11.1487 2.32095L10.1087 0.519614C9.94298 0.232638 9.57796 0.133194 9.29338 0.297499C9.00879 0.461804 8.91241 0.827638 9.07809 1.11461Z" fill="#FFEDA1" />
      <path d="M14.3426 3.16569L13.2052 4.90715C13.024 5.18459 13.1001 5.55517 13.3752 5.73486C13.6504 5.91456 14.0203 5.83532 14.2015 5.55788L15.3389 3.81642C15.5201 3.53898 15.444 3.16841 15.1688 2.98871C14.8937 2.80902 14.5238 2.88825 14.3426 3.16569Z" fill="#FFEDA1" />
      <path d="M17.9617 1.44972L18.6816 3.40116C18.7963 3.71205 19.1392 3.87187 19.4475 3.75814C19.7558 3.6444 19.9127 3.30017 19.798 2.98928L19.0781 1.03784C18.9634 0.726955 18.6205 0.567132 18.3122 0.680869C18.0039 0.794606 17.847 1.13883 17.9617 1.44972Z" fill="#FFEDA1" />
    </svg>
  )
}

export const EmpanadasIcon = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 27 15" fill="none">
      <path d="M2.5911 13.67C2.5911 13.67 2.6511 13.67 2.6811 13.67H24.2911C24.2911 13.67 24.3511 13.67 24.3811 13.67C25.4411 13.48 26.1411 12.46 25.9511 11.4C25.7711 10.42 24.8911 9.75 23.9111 9.81C24.6911 9.22 24.9211 8.14 24.4211 7.28C23.9411 6.46 22.9511 6.12 22.0911 6.43C22.5411 5.63 22.3711 4.6 21.6511 3.99C20.9111 3.37 19.8511 3.39 19.1411 3.99C19.3211 3.07 18.8111 2.13 17.9111 1.8C16.9211 1.43 15.8311 1.92 15.4311 2.88C15.3911 1.84 14.5411 1 13.4911 1C12.4411 1 11.5911 1.83 11.5511 2.88C11.1511 1.91 10.0611 1.43 9.0711 1.8C8.1611 2.14 7.6611 3.07 7.8411 3.99C7.1311 3.39 6.0711 3.36 5.3311 3.99C4.6011 4.6 4.4411 5.63 4.8911 6.43C4.0311 6.12 3.0411 6.46 2.5611 7.28C2.0611 8.14 2.2911 9.22 3.0711 9.81C2.1011 9.75 1.2111 10.42 1.0311 11.4C0.841099 12.46 1.5411 13.48 2.6011 13.67H2.5911Z" fill="#F8AE15" stroke="#F8AE15" strokeLinecap="round" strokeLinejoin="round" />
      <path d="M13.4911 4.24C8.2811 4.24 4.0611 8.47 4.0611 13.67H22.9211C22.9211 8.46 18.7011 4.24 13.4911 4.24Z" fill="#FFDC78" stroke="#FFDC78" strokeMiterlimit="10" />
      <path d="M7.56109 11.38C8.20174 11.38 8.72109 10.8607 8.72109 10.22C8.72109 9.57935 8.20174 9.06 7.56109 9.06C6.92044 9.06 6.40109 9.57935 6.40109 10.22C6.40109 10.8607 6.92044 11.38 7.56109 11.38Z" fill="#FFF9C0" />
      <path d="M9.2511 8.3C9.60456 8.3 9.8911 8.01346 9.8911 7.66C9.8911 7.30654 9.60456 7.02 9.2511 7.02C8.89764 7.02 8.6111 7.30654 8.6111 7.66C8.6111 8.01346 8.89764 8.3 9.2511 8.3Z" fill="#FFF9C0" />
      <path d="M10.5311 10.34C10.8846 10.34 11.1711 10.0535 11.1711 9.7C11.1711 9.34654 10.8846 9.06 10.5311 9.06C10.1776 9.06 9.8911 9.34654 9.8911 9.7C9.8911 10.0535 10.1776 10.34 10.5311 10.34Z" fill="#FFF9C0" />
      <path d="M16.8611 11.63H20.1711" stroke="#F8AE15" strokeMiterlimit="10" />
      <path d="M15.1411 11.63H16.2611" stroke="#F8AE15" strokeMiterlimit="10" />
    </svg>
  )
}

export const BebidasIcon = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="14" viewBox="0 0 15 26" fill="none">
      <path d="M13.7 7.34H7.4H1.14L3.2 24.82H7.43H11.63L13.7 7.34Z" fill="#DD5F69" stroke="#DD5F69" strokeMiterlimit="10" />
      <path d="M11.75 18.43L11.72 18.45C11.69 18.47 11.67 18.48 11.64 18.5C11.56 18.55 11.48 18.59 11.39 18.63C11.3 18.66 11.21 18.69 11.12 18.71C10.92 18.76 10.71 18.77 10.5 18.76C10.29 18.74 10.09 18.68 9.9 18.57C9.71 18.47 9.55 18.33 9.42 18.17C9.26 17.99 9.12 17.79 9 17.58C8.73 17.1 8.5 16.6 8.26 16.11C8.09 15.76 8.1 15.77 8.44 15.59C9.43 15.05 9.99 14.22 10.04 13.08C10.08 12.04 9.22 11.05 8.08 10.8C7.49 10.66 6.88 10.66 6.29 10.8C5.7 10.94 5.15 11.21 4.68 11.59C4.01 12.11 3.55 12.8 3.47 13.67C3.43 14 3.51 14.34 3.69 14.62C3.88 14.9 4.16 15.1 4.48 15.19C5.58 15.5 6.79 14.61 6.82 13.46C6.82 13.26 6.79 13.07 6.71 12.89C6.67 12.8 6.62 12.72 6.55 12.65C6.5 12.6 6.45 12.55 6.4 12.51C6.35 12.46 6.29 12.42 6.22 12.39C6.22 12.39 6.21 12.39 6.2 12.39C6.2 12.39 6.17 12.45 6.16 12.47L6.08 12.64L5.97 12.88L5.92 12.98C5.92 12.98 5.97 13.01 5.99 13.03C6.01 13.05 6.03 13.07 6.05 13.09C6.08 13.13 6.11 13.17 6.13 13.22C6.17 13.32 6.19 13.42 6.18 13.52C6.18 13.67 6.14 13.81 6.08 13.94C5.97 14.19 5.77 14.39 5.53 14.52C5.15 14.72 4.75 14.75 4.38 14.48C3.99 14.19 4 13.78 4.09 13.35C4.1 13.3 4.12 13.25 4.14 13.2C4.4 12.57 4.88 12.06 5.49 11.76C6.21 11.36 7.06 11.25 7.87 11.44C8 11.47 8.11 11.5 8.01 11.69C7.46 12.75 6.99 13.85 6.48 14.93C6.28 15.41 6.01 15.85 5.67 16.24C5.16 16.78 4.55 17.09 3.78 16.95C3.74 16.95 3.7 16.93 3.67 16.92L3.42 17.49C3.42 17.49 3.51 17.53 3.53 17.53C3.72 17.58 3.91 17.6 4.11 17.6C4.3 17.6 4.49 17.57 4.68 17.52C4.98 17.44 5.26 17.32 5.51 17.16C5.77 16.99 6.01 16.78 6.21 16.55C6.64 16.05 6.89 15.44 7.17 14.85C7.62 13.9 8.06 12.95 8.51 12C8.63 11.74 8.64 11.74 8.87 11.93C9.14 12.14 9.31 12.44 9.38 12.77C9.56 13.81 8.74 15 7.68 15.24C7.63 15.25 7.51 15.29 7.51 15.29C7.45 15.4 7.4 15.51 7.36 15.63C7.36 15.68 7.39 15.73 7.41 15.78C7.79 16.6 8.18 17.41 8.61 18.21C8.75 18.49 8.95 18.74 9.2 18.93C9.45 19.13 9.73 19.27 10.04 19.35C10.13 19.37 10.22 19.39 10.31 19.4C10.78 19.45 11.26 19.36 11.68 19.13C11.89 19.02 12.09 18.88 12.26 18.73L11.74 18.43" fill="var(--yellow)" className='fill-yellow-300 sm:fill-black' />
      <path d="M11.75 18.43L11.72 18.45C11.69 18.47 11.67 18.48 11.64 18.5C11.56 18.55 11.48 18.59 11.39 18.63C11.3 18.66 11.21 18.69 11.12 18.71C10.92 18.76 10.71 18.77 10.5 18.76C10.29 18.74 10.09 18.68 9.9 18.57C9.71 18.47 9.55 18.33 9.42 18.17C9.26 17.99 9.12 17.79 9 17.58C8.73 17.1 8.5 16.6 8.26 16.11C8.09 15.76 8.1 15.77 8.44 15.59C9.43 15.05 9.99 14.22 10.04 13.08C10.08 12.04 9.22 11.05 8.08 10.8C7.49 10.66 6.88 10.66 6.29 10.8C5.7 10.94 5.15 11.21 4.68 11.59C4.01 12.11 3.55 12.8 3.47 13.67C3.43 14 3.51 14.34 3.69 14.62C3.88 14.9 4.16 15.1 4.48 15.19C5.58 15.5 6.79 14.61 6.82 13.46C6.82 13.26 6.79 13.07 6.71 12.89C6.67 12.8 6.62 12.72 6.55 12.65C6.5 12.6 6.45 12.55 6.4 12.51C6.35 12.46 6.29 12.42 6.22 12.39C6.22 12.39 6.21 12.39 6.2 12.39C6.2 12.39 6.17 12.45 6.16 12.47L6.08 12.64L5.97 12.88L5.92 12.98C5.92 12.98 5.97 13.01 5.99 13.03C6.01 13.05 6.03 13.07 6.05 13.09C6.08 13.13 6.11 13.17 6.13 13.22C6.17 13.32 6.19 13.42 6.18 13.52C6.18 13.67 6.14 13.81 6.08 13.94C5.97 14.19 5.77 14.39 5.53 14.52C5.15 14.72 4.75 14.75 4.38 14.48C3.99 14.19 4 13.78 4.09 13.35C4.1 13.3 4.12 13.25 4.14 13.2C4.4 12.57 4.88 12.06 5.49 11.76C6.21 11.36 7.06 11.25 7.87 11.44C8 11.47 8.11 11.5 8.01 11.69C7.46 12.75 6.99 13.85 6.48 14.93C6.28 15.41 6.01 15.85 5.67 16.24C5.16 16.78 4.55 17.09 3.78 16.95C3.74 16.95 3.7 16.93 3.67 16.92L3.42 17.49C3.42 17.49 3.51 17.53 3.53 17.53C3.72 17.58 3.91 17.6 4.11 17.6C4.3 17.6 4.49 17.57 4.68 17.52C4.98 17.44 5.26 17.32 5.51 17.16C5.77 16.99 6.01 16.78 6.21 16.55C6.64 16.05 6.89 15.44 7.17 14.85C7.62 13.9 8.06 12.95 8.51 12C8.63 11.74 8.64 11.74 8.87 11.93C9.14 12.14 9.31 12.44 9.38 12.77C9.56 13.81 8.74 15 7.68 15.24C7.63 15.25 7.51 15.29 7.51 15.29C7.45 15.4 7.4 15.51 7.36 15.63C7.36 15.68 7.39 15.73 7.41 15.78C7.79 16.6 8.18 17.41 8.61 18.21C8.75 18.49 8.95 18.74 9.2 18.93C9.45 19.13 9.73 19.27 10.04 19.35C10.13 19.37 10.22 19.39 10.31 19.4C10.78 19.45 11.26 19.36 11.68 19.13C11.89 19.02 12.09 18.88 12.26 18.73L11.74 18.43" stroke="var(--yellow)" className='stroke-yellow-300 sm:stroke-black' strokeWidth="0.5" strokeLinecap="square" strokeLinejoin="round" />
      <path d="M14.83 4.9H0V7.35H14.83V4.9Z" fill="white" />
      <path d="M11.49 0H9.95V4.9H11.49V0Z" fill="#F8AE15" />
    </svg>
  )
}

interface RestIconProps {
  color?: string
  size?: number
  className?: string
}

export const RestIcon: React.FC<RestIconProps> = ({ color = 'currentColor', size = 8, className }) => {
  return (
    <svg width={size} viewBox="0 0 8 2" className={className}>
      <rect width="8" height="2" fill={color} />
    </svg>
  )
}

interface AddIconProps {
  color?: string
  size?: number
  className?: string
}

export const AddIcon: React.FC<AddIconProps> = ({ color = 'currentColor', size = 8, className }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 9 9" className={className}>
      <path d="M3.15,0v3.15H0v2.73H3.15v3.15H5.88V5.881h3.15V3.151H5.88V0Z" transform="translate(0 0)" fill={color} />
    </svg>
  )
}

interface CloseIconProps {
  color?: string
  size?: number
  className?: string
}

export const CloseIcon: React.FC<CloseIconProps> = ({ color = 'currentColor', size = 24, className }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className={cn('h-4 w-4', className)}>
      <path d="M18 6 6 18">
      </path>
      <path d="m6 6 12 12">
      </path>
    </svg>
  )
}

interface SuccessCircleIconProps {
  size?: number
  color?: string
  insideColor?: string
}

export const SuccessCircleIcon: React.FC<SuccessCircleIconProps> = ({ size = 74, color = '#48A776', insideColor = '#fff' }) => {
  return (
    <svg width={size} height={size} viewBox='0 0 74 74'>
      <g transform='translate(-33.957 -27.695)'>
        <path
          d='M107.957,64.7a37,37,0,1,1-37-37,37,37,0,0,1,37,37'
          transform='translate(0 0)'
          fill={color}
        />
        <path
          d='M54.183,63.966,40.25,50.033l4.185-4.185L54.183,55.6,74.29,35.488l4.185,4.185Z'
          transform='translate(12.334 15.274)'
          fill={insideColor}
        />
      </g>
    </svg>
  )
}

interface MasterCardIconProps {
  size?: number
}

export const MasterCardIcon: React.FC<MasterCardIconProps> = ({ size = 118 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 118 73" fill="none">
      <path d="M74.9 7.7H43.4V64.3H74.9V7.7Z" fill="#FF5F00" />
      <path d="M45.4 36C45.4 25 50.5 14.5 59.1 7.7C43.5 -4.6 20.8 -1.9 8.49999 13.8C-3.70001 29.4 -1.00001 52 14.7 64.3C27.8 74.6 46.1 74.6 59.2 64.3C50.5 57.5 45.4 47 45.4 36Z" fill="#EB001B" shapeRendering={'geometricPrecision'} />
      <path d="M117.4 36C117.4 55.9 101.3 72 81.4 72C73.3 72 65.5 69.3 59.2 64.3C74.8 52 77.5 29.4 65.2 13.7C63.4 11.5 61.4 9.4 59.2 7.7C74.8 -4.6 97.5 -1.9 109.7 13.8C114.7 20.1 117.4 27.9 117.4 36Z" fill="#F79E1B" shapeRendering={'geometricPrecision'} />
    </svg>
  )
}

interface MaestroCardIconProps {
  size?: number
}

export const MaestroCardIcon: React.FC<MaestroCardIconProps> = ({ size = 117 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 117 72" fill="none">
      <path d="M73.9969 7.69681H42.4969V64.3032H73.9969V7.69681Z" fill="#7375CF" />
      <path d="M44.4971 36C44.4922 30.5484 45.7275 25.1671 48.1097 20.2635C50.4919 15.3599 53.9585 11.0626 58.247 7.69682C52.9363 3.52245 46.5582 0.926479 39.8418 0.205606C33.1255 -0.515267 26.3418 0.668022 20.2662 3.62028C14.1905 6.57254 9.06806 11.1746 5.48428 16.9005C1.90051 22.6264 0 29.2451 0 36C0 42.7549 1.90051 49.3736 5.48428 55.0995C9.06806 60.8254 14.1905 65.4275 20.2662 68.3797C26.3418 71.332 33.1255 72.5153 39.8418 71.7944C46.5582 71.0735 52.9363 68.4776 58.247 64.3032C53.9585 60.9374 50.4919 56.64 48.1097 51.7365C45.7275 46.8329 44.4922 41.4516 44.4971 36Z" fill="#EB001B" />
      <path d="M116.492 36C116.492 42.7548 114.592 49.3735 111.009 55.0994C107.425 60.8253 102.303 65.4274 96.2272 68.3796C90.1517 71.3319 83.3681 72.5153 76.6518 71.7944C69.9355 71.0735 63.5576 68.4776 58.247 64.3032C62.5318 60.934 65.9957 56.636 68.3775 51.7332C70.7593 46.8303 71.9968 41.4507 71.9968 36C71.9968 30.5493 70.7593 25.1697 68.3775 20.2668C65.9957 15.364 62.5318 11.066 58.247 7.69681C63.5576 3.52244 69.9355 0.92646 76.6518 0.205597C83.3681 -0.515267 90.1517 0.668074 96.2272 3.62036C102.303 6.57265 107.425 11.1747 111.009 16.9006C114.592 22.6265 116.492 29.2452 116.492 36Z" fill="#00A2E5" />
    </svg>
  )
}

interface VisaCardIconProps {
  size?: number
}

export const VisaCardIcon: React.FC<VisaCardIconProps> = ({ size = 104 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 104 34" fill="none">
      <path d="M39.4873 0.59258L25.8715 33.0192H16.9882L10.2878 7.14127C9.88103 5.54735 9.52732 4.96341 8.29016 4.2919C6.2703 3.19811 2.93473 2.1719 0 1.53498L0.199332 0.592583H14.4987C16.3214 0.592583 17.9599 1.8037 18.3738 3.89883L21.9125 22.6625L30.6582 0.592046H39.4873V0.59258ZM74.2935 22.4322C74.3293 13.8738 62.4376 13.4023 62.5194 9.57918C62.5448 8.41564 63.6547 7.17857 66.0841 6.86282C67.2882 6.70548 70.6059 6.58545 74.3688 8.31399L75.8449 1.43766C73.8228 0.705045 71.2212 0 67.9842 0C59.6778 0 53.8322 4.4076 53.7829 10.7189C53.7293 15.3871 57.9553 17.9921 61.1392 19.5433C64.4147 21.1318 65.5137 22.1526 65.5012 23.5735C65.478 25.7487 62.8888 26.7089 60.4692 26.7468C56.2453 26.8116 53.7943 25.6059 51.8405 24.6992L50.3173 31.8032C52.2808 32.7023 55.9051 33.4868 59.6626 33.5263C68.4912 33.5263 74.2665 29.1733 74.2935 22.4322ZM96.2277 33.0192H104L97.2157 0.592577H90.0419C88.4288 0.592577 87.0681 1.53011 86.4658 2.97156L73.8553 33.0192H82.6796L84.4313 28.1758H95.2131L96.2277 33.0192ZM86.8509 21.5298L91.2741 9.35479L93.82 21.5298H86.8509ZM51.4944 0.59258L44.5454 33.0192H36.142L43.0937 0.592583L51.4944 0.59258Z" fill="#1434CB" />
    </svg>
  )
}

interface AmexCardIconProps {
  size?: number
}

export const AmexCardIcon: React.FC<AmexCardIconProps> = ({ size = 59 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 59 38" fill="none">
      <path d="M53.7 33.4L51.1 30.5L48.4 33.4H43.1H31.7V19.9H26.4L33 4.8H39.4L41.7 10V4.8H49.7L51.1 8.7L52.5 4.8H58.6V2.5C58.6 1.1 57.5 0 56.1 0H2.5C1.1 0 0 1.1 0 2.5V35C0 36.4 1.1 37.5 2.5 37.5H56.1C57.5 37.5 58.6 36.4 58.6 35V33.4H53.7Z" fill="#0071CE" />
      <path d="M54.4 31.8H58.6L53.1 25.9L58.6 20.1H54.5L51 23.9L47.6 20.1H43.4L49 26L43.4 31.8H47.5L51 28L54.4 31.8Z" fill="#0071CE" />
      <path d="M36.7 29.1V27.3H43.3V24.6H36.7V22.8H43.4V20.1H33.5V31.8H43.4V29.1H36.7Z" fill="#0071CE" />
      <path d="M55.5 18.4H58.5V6.60001L53.7 6.70001L51.1 14L48.4 6.70001H43.4V18.4H46.6V10.2L49.6 18.4H52.4L55.5 10.2V18.4Z" fill="#0071CE" />
      <path d="M38.3 6.70001H34.2L29 18.4H32.5L33.5 16.1H38.9L39.9 18.4H43.5L38.3 6.70001ZM34.6 13.4L36.2 9.60001L37.8 13.4H34.6Z" fill="#0071CE" />
      <path d="M55.7 25.6L58.6 28.8V22.4L55.7 25.6Z" fill="#0071CE" />
    </svg>
  )
}

interface JCBCardIconProps {
  size?: number
}

export const JCBCardIcon: React.FC<JCBCardIconProps> = ({ size = 121 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 121 90" fill="none">
      <path d="M90.8316 54.7345H99.5141C99.7851 54.7345 100.302 54.6922 100.551 54.6371C102.219 54.2773 103.608 52.7957 103.608 50.7806C103.608 48.7655 102.219 47.2796 100.551 46.9198C100.306 46.8648 99.7893 46.8224 99.5141 46.8224H90.8316V54.7345Z" fill="url(#paint0_linear_15_45)" />
      <path d="M98.4981 0.00190735C90.2136 0.00190735 83.4995 6.71596 83.4995 15.0006V30.5792H104.725C105.216 30.5792 105.818 30.6131 106.194 30.6342C110.999 30.8755 114.538 33.3435 114.538 37.6234C114.538 40.9889 112.117 43.8676 107.71 44.5153V44.6846C112.578 45.0233 116.303 47.6987 116.303 51.9236C116.303 56.4913 112.214 59.425 106.762 59.425H83.4995V90.0023H105.5C113.785 90.0023 120.499 83.284 120.499 75.0037V0.00190735H98.4981Z" fill="url(#paint1_linear_15_45)" />
      <path d="M102.575 38.7072C102.575 36.726 101.186 35.3967 99.5565 35.1215C99.4041 35.0961 98.9892 35.0538 98.7013 35.0538H90.8316V42.3563H98.7013C98.9892 42.3563 99.4041 42.3139 99.5565 42.2885C101.191 42.0134 102.575 40.6841 102.575 38.7029V38.7072Z" fill="url(#paint2_linear_15_45)" />
      <path d="M15.5 0.00190735C7.21544 0.00190735 0.501426 6.71595 0.501426 15.0006V52.0421C4.70933 54.0783 9.0527 55.4076 13.4765 55.4076C18.6623 55.4076 21.5113 52.2411 21.5113 47.9824V30.5792H34.4102V47.9824C34.4102 54.7895 30.2319 60.2505 15.8937 60.2505C7.26624 60.2505 0.497192 58.3879 0.497192 58.3879V89.9981H22.4977C30.7822 89.9981 37.4963 83.2798 37.4963 74.9994V0.00190735H15.4958H15.5Z" fill="url(#paint3_linear_15_45)" />
      <path d="M56.9991 0.00190735C48.7145 0.00190735 42.0005 6.71596 42.0005 15.0006V34.6389C45.802 31.3793 52.3721 29.3431 63.0527 29.8214C68.7676 30.0754 74.8297 31.6079 74.8297 31.6079V37.9579C71.7945 36.4212 68.158 34.9945 63.4718 34.6432C55.3692 34.0293 50.4925 37.9917 50.4925 45.0021C50.4925 52.0125 55.3692 55.9707 63.4718 55.3568C68.158 55.0055 71.8453 53.5407 74.8297 52.0464V58.3921C74.8297 58.3921 68.7676 59.9246 63.0527 60.1828C52.3763 60.6612 45.802 58.6249 42.0005 55.3653V90.0023H64.0009C72.2855 90.0023 78.9995 83.284 78.9995 75.0037V0.00190735H56.9991Z" fill="url(#paint4_linear_15_45)" />
      <defs>
        <linearGradient id="paint0_linear_15_45" x1="83.0594" y1="50.4942" x2="119.989" y2="50.4942" gradientUnits="userSpaceOnUse">
          <stop stopColor="#00763C" />
          <stop offset="0.31" stopColor="#228B37" />
          <stop offset="0.77" stopColor="#52A730" />
          <stop offset="1" stopColor="#65B32E" />
        </linearGradient>
        <linearGradient id="paint1_linear_15_45" x1="83.0594" y1="44.7383" x2="119.989" y2="44.7383" gradientUnits="userSpaceOnUse">
          <stop stopColor="#00763C" />
          <stop offset="0.31" stopColor="#228B37" />
          <stop offset="0.77" stopColor="#52A730" />
          <stop offset="1" stopColor="#65B32E" />
        </linearGradient>
        <linearGradient id="paint2_linear_15_45" x1="83.0594" y1="38.475" x2="119.989" y2="38.475" gradientUnits="userSpaceOnUse">
          <stop stopColor="#00763C" />
          <stop offset="0.31" stopColor="#228B37" />
          <stop offset="0.77" stopColor="#52A730" />
          <stop offset="1" stopColor="#65B32E" />
        </linearGradient>
        <linearGradient id="paint3_linear_15_45" x1="0.380692" y1="44.7383" x2="37.8844" y2="44.7383" gradientUnits="userSpaceOnUse">
          <stop stopColor="#312B6B" />
          <stop offset="0.13" stopColor="#293576" />
          <stop offset="0.71" stopColor="#0B5EA6" />
          <stop offset="1" stopColor="#006FB9" />
        </linearGradient>
        <linearGradient id="paint4_linear_15_45" x1="41.5257" y1="44.7383" x2="77.9483" y2="44.7383" gradientUnits="userSpaceOnUse">
          <stop stopColor="#6E2E2B" />
          <stop offset="0.39" stopColor="#A11931" />
          <stop offset="0.8" stopColor="#D10737" />
          <stop offset="1" stopColor="#E4003A" />
        </linearGradient>
      </defs>
    </svg>
  )

}

interface DiscoverCardIconProps {
  size?: number
}

export const DiscoverCardIcon: React.FC<DiscoverCardIconProps> = ({ size = 92 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 92 59" fill="none">
      <path d="M88.09 0H3C1.34 0 0 1.34 0 3V55.26C0 56.92 1.34 58.26 3 58.26H88.09C89.75 58.26 91.09 56.92 91.09 55.26V3C91.09 1.34 89.75 0 88.09 0ZM86.61 29.13C86.61 44.66 74.02 57.26 58.48 57.26H3C1.9 57.26 1 56.36 1 55.26V3C1 1.9 1.9 1 3 1H58.48C74.01 1 86.61 13.59 86.61 29.13Z" fill="#F89C20" />
      <path d="M7.76 22.8H4.22V35.18H7.75C9.62 35.18 10.98 34.74 12.17 33.75C13.58 32.58 14.42 30.82 14.42 29C14.42 25.35 11.69 22.8 7.77 22.8H7.76ZM10.58 32.1C9.82 32.78 8.84 33.08 7.28 33.08H6.63V24.89H7.28C8.84 24.89 9.79 25.17 10.58 25.89C11.42 26.63 11.92 27.79 11.92 28.97C11.92 30.15 11.42 31.35 10.58 32.09V32.1Z" fill="#231F20" />
      <path d="M17.93 22.8H15.52V35.18H17.93V22.8Z" fill="#231F20" />
      <path d="M23.83 27.55C22.38 27.01 21.96 26.66 21.96 25.99C21.96 25.21 22.72 24.62 23.76 24.62C24.48 24.62 25.08 24.92 25.71 25.62L26.97 23.97C25.93 23.06 24.69 22.6 23.33 22.6C21.14 22.6 19.47 24.12 19.47 26.15C19.47 27.86 20.25 28.73 22.52 29.54C23.46 29.87 23.95 30.1 24.19 30.24C24.67 30.55 24.91 31 24.91 31.52C24.91 32.52 24.11 33.27 23.03 33.27C21.88 33.27 20.95 32.69 20.39 31.62L18.83 33.12C19.94 34.75 21.28 35.48 23.12 35.48C25.63 35.48 27.39 33.81 27.39 31.42C27.39 29.45 26.58 28.56 23.83 27.56V27.55Z" fill="#231F20" />
      <path d="M28.16 29C28.16 32.64 31.02 35.46 34.69 35.46C35.73 35.46 36.62 35.26 37.72 34.74V31.9C36.75 32.87 35.9 33.26 34.8 33.26C32.37 33.26 30.64 31.5 30.64 28.99C30.64 26.61 32.42 24.74 34.69 24.74C35.84 24.74 36.71 25.15 37.72 26.13V23.29C36.66 22.75 35.79 22.53 34.75 22.53C31.09 22.53 28.16 25.41 28.16 29.01V29Z" fill="#231F20" />
      <path d="M56.86 31.12L53.56 22.8H50.92L56.18 35.5H57.48L62.82 22.8H60.21L56.86 31.12Z" fill="#231F20" />
      <path d="M63.92 35.18H70.76V33.09H66.33V29.75H70.6V27.65H66.33V24.9H70.76V22.8H63.92V35.18Z" fill="#231F20" />
      <path d="M80.33 26.46C80.33 24.14 78.73 22.81 75.95 22.81H72.37V35.19H74.78V30.22H75.1L78.44 35.19H81.41L77.51 29.97C79.33 29.6 80.33 28.36 80.33 26.46ZM75.49 28.5H74.78V24.75H75.52C77.02 24.75 77.84 25.38 77.84 26.59C77.84 27.8 77.02 28.5 75.48 28.5H75.49Z" fill="#231F20" />
      <path d="M51.61 28.98C51.61 32.6 48.68 35.54 45.05 35.54C41.42 35.54 38.49 32.61 38.49 28.98C38.49 25.35 41.42 22.42 45.05 22.42C48.68 22.42 51.61 25.35 51.61 28.98Z" fill="#F89C20" />
    </svg>
  )
}

interface UnionPayrCardIconProps {
  size?: number
}

export const UnionPayrCardIcon: React.FC<UnionPayrCardIconProps> = ({ size = 86 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 86 54" fill="none">
      <path d="M16.7675 0H38.1375C41.1175 0 42.9775 2.43 42.2775 5.43L32.3275 48.14C31.6275 51.13 28.6375 53.56 25.6575 53.56H4.28746C1.30746 53.56 -0.552535 51.13 0.147465 48.14L10.0975 5.43C10.7875 2.43 13.7775 0 16.7675 0Z" fill="#ED171F" />
      <path d="M36.3575 0H60.9275C63.9075 0 62.5675 2.43 61.8675 5.43L51.9175 48.14C51.2175 51.13 51.4375 53.56 48.4475 53.56H23.8775C20.8875 53.56 19.0375 51.13 19.7375 48.14L29.6875 5.43C30.3875 2.43 33.3775 0 36.3575 0Z" fill="#082F67" />
      <path d="M59.9575 0H81.3275C84.3075 0 86.1675 2.43 85.4675 5.43L75.5175 48.14C74.8175 51.13 71.8375 53.56 68.8375 53.56H47.4775C44.4875 53.56 42.6375 51.13 43.3375 48.14L53.2875 5.43C53.9875 2.43 56.9675 0 59.9575 0Z" fill="#006A65" />
      <path fillRule="evenodd" clip-rule="evenodd" d="M56.3875 40.18H58.3975L58.9775 38.24H56.9675L56.3875 40.18ZM57.9975 34.83L57.3075 37.12C57.3075 37.12 58.0675 36.73 58.4875 36.61C58.8975 36.51 59.5275 36.44 59.5275 36.44L60.0175 34.84H58.0075L57.9975 34.83ZM58.9975 31.53L58.3275 33.73C58.3275 33.73 59.0775 33.39 59.4875 33.28C59.8975 33.17 60.5275 33.13 60.5275 33.13L61.0075 31.53H58.9975ZM63.4575 31.53L60.8575 40.15H61.5575L61.0175 41.93H60.3175L60.1575 42.48H57.6775L57.8475 41.93H52.8075L53.3175 40.28H53.8275L56.4675 31.53L56.9975 29.76H59.5275L59.2675 30.65C59.2675 30.65 59.9375 30.16 60.5775 30C61.2175 29.83 64.8775 29.77 64.8775 29.77L64.3375 31.52H63.4675L63.4575 31.53Z" fill="white" />
      <path d="M64.5775 29.78H67.2775L67.3075 30.79C67.2875 30.96 67.4375 31.04 67.7475 31.04H68.2975L67.7975 32.7H66.3375C65.0775 32.79 64.5975 32.25 64.6275 31.64L64.5775 29.78Z" fill="white" />
      <path d="M64.9275 37.66H62.3575L62.7975 36.18H65.7375L66.1575 34.83H63.2575L63.7575 33.16H71.8375L71.3275 34.83H68.6175L68.1975 36.18H70.9175L70.4675 37.66H67.5275L67.0075 38.28H68.1975L68.4875 40.14C68.5175 40.32 68.5275 40.44 68.5775 40.52C68.6375 40.59 68.9975 40.62 69.1975 40.62H69.5575L69.0075 42.43H68.0875C67.9475 42.43 67.7375 42.42 67.4475 42.4C67.1675 42.38 66.9775 42.22 66.7875 42.13C66.6175 42.05 66.3675 41.84 66.3075 41.5L66.0175 39.64L64.6875 41.47C64.2675 42.05 63.6875 42.49 62.7175 42.49H60.8475L61.3375 40.87H62.0575C62.2675 40.87 62.4475 40.79 62.5775 40.72C62.7175 40.66 62.8375 40.59 62.9775 40.39L64.9175 37.65L64.9275 37.66Z" fill="white" />
      <path d="M36.7575 33.61H43.5675L43.0675 35.24H40.3475L39.9275 36.62H42.7175L42.2075 38.3H39.4275L38.7575 40.55C38.6775 40.8 39.4175 40.83 39.6875 40.83L41.0875 40.64L40.5275 42.5H37.3875C37.1375 42.5 36.9475 42.46 36.6775 42.4C36.4175 42.33 36.2975 42.22 36.1775 42.04C36.0675 41.86 35.8875 41.71 36.0075 41.31L36.9075 38.33H35.3575L35.8675 36.62H37.4275L37.8375 35.24H36.2875L36.7875 33.61H36.7575Z" fill="white" />
      <path d="M41.3475 30.69H44.1375L43.6275 32.39H39.8075L39.3975 32.75C39.2175 32.92 39.1575 32.85 38.9275 32.98C38.7075 33.09 38.2575 33.3 37.6675 33.3H36.4475L36.9475 31.66H37.3175C37.6275 31.66 37.8375 31.63 37.9475 31.56C38.0675 31.48 38.2075 31.31 38.3575 31.03L39.0575 29.75H41.8375L41.3475 30.68V30.69Z" fill="white" />
      <path fillRule="evenodd" clip-rule="evenodd" d="M46.7075 33.49C46.7075 33.49 47.4675 32.79 48.7775 32.57C49.0775 32.51 50.9275 32.53 50.9275 32.53L51.2075 31.6H47.2775L46.7075 33.49ZM50.3975 34.2H46.4975L46.2575 34.99H49.6375C50.0375 34.94 50.1175 34.99 50.1475 34.98L50.3975 34.2ZM45.3475 29.79H47.7275L47.3775 30.99C47.3775 30.99 48.1275 30.39 48.6575 30.18C49.1775 29.98 50.3675 29.81 50.3675 29.81L54.2175 29.79L52.9075 34.16C52.6875 34.91 52.4275 35.39 52.2675 35.61C52.1175 35.84 51.9475 36.02 51.6175 36.21C51.2975 36.38 50.9975 36.48 50.7275 36.51C50.4675 36.53 50.0775 36.54 49.5375 36.54H45.8275L44.7775 40C44.6775 40.34 44.6275 40.5 44.6975 40.6C44.7575 40.68 44.8775 40.78 45.0575 40.78L46.6875 40.63L46.1275 42.53H44.2975C43.7175 42.53 43.2875 42.52 42.9975 42.49C42.7175 42.47 42.4175 42.49 42.2275 42.34C42.0575 42.19 41.7975 41.99 41.7975 41.79C41.8175 41.6 41.8875 41.29 42.0175 40.86L45.3475 29.8V29.79Z" fill="white" />
      <path d="M52.2775 36.84L52.0575 37.89C51.9575 38.22 51.8775 38.47 51.6275 38.68C51.3675 38.9 51.0575 39.13 50.3475 39.13L49.0275 39.18V40.37C48.9975 40.71 49.0875 40.67 49.1475 40.73C49.2075 40.79 49.2575 40.81 49.3175 40.83L49.7375 40.81L50.9975 40.74L50.4775 42.47H49.0275C48.0175 42.47 47.2575 42.45 47.0175 42.25C46.7775 42.1 46.7475 41.9 46.7475 41.57L46.8375 36.94H49.1475L49.1175 37.88H49.6775C49.8675 37.88 49.9875 37.86 50.0775 37.81C50.1475 37.75 50.1975 37.68 50.2375 37.57L50.4575 36.83H52.2775V36.84Z" fill="white" />
      <path d="M19.2975 13.65C19.2175 14.02 17.7275 20.87 17.7275 20.87C17.4075 22.25 17.1775 23.25 16.3875 23.88C15.9375 24.25 15.4175 24.43 14.8075 24.43C13.8375 24.43 13.2675 23.95 13.1675 23.03L13.1475 22.72L13.4475 20.86C13.4475 20.86 15.0075 14.62 15.2775 13.8C15.2875 13.75 15.2975 13.73 15.2975 13.71C12.2675 13.74 11.7275 13.71 11.6975 13.67C11.6775 13.73 11.5975 14.12 11.5975 14.12L10.0075 21.14L9.86747 21.74L9.60747 23.69C9.60747 24.27 9.71747 24.74 9.94747 25.14C10.6775 26.41 12.7375 26.6 13.9075 26.6C15.4175 26.6 16.8275 26.28 17.7775 25.7C19.4375 24.72 19.8675 23.19 20.2575 21.83L20.4375 21.13C20.4375 21.13 22.0375 14.65 22.3175 13.81C22.3175 13.76 22.3275 13.74 22.3375 13.72C20.1375 13.74 19.4975 13.72 19.2875 13.68" fill="white" />
      <path d="M28.1675 26.5C27.0875 26.49 26.7175 26.49 25.4575 26.55L25.4075 26.46C25.5175 25.98 25.6375 25.51 25.7475 25.03L25.8975 24.38C26.1275 23.36 26.3575 22.18 26.3875 21.82C26.4075 21.6 26.4775 21.06 25.8675 21.06C25.6075 21.06 25.3375 21.19 25.0575 21.31C24.9075 21.85 24.5975 23.37 24.4575 24.07C24.1475 25.53 24.1275 25.7 23.9875 26.42L23.8975 26.51C22.7875 26.5 22.4075 26.5 21.1275 26.56L21.0675 26.45C21.2775 25.58 21.4975 24.71 21.6975 23.84C22.2275 21.49 22.3575 20.59 22.5075 19.39L22.6075 19.32C23.8475 19.15 24.1475 19.11 25.4975 18.83L25.6075 18.96L25.4075 19.71C25.6375 19.58 25.8475 19.44 26.0875 19.32C26.7175 19.01 27.4275 18.92 27.8175 18.92C28.4075 18.92 29.0475 19.09 29.3175 19.77C29.5775 20.38 29.4075 21.13 29.0675 22.6L28.8975 23.35C28.5475 24.99 28.4975 25.29 28.3075 26.42L28.1775 26.51L28.1675 26.5Z" fill="white" />
      <path d="M32.5275 26.5C31.8775 26.5 31.4675 26.49 31.0575 26.5C30.6575 26.5 30.2575 26.52 29.6575 26.55L29.6175 26.5L29.5775 26.45C29.7375 25.83 29.8375 25.61 29.9175 25.39C29.9975 25.17 30.0775 24.95 30.2175 24.32C30.4075 23.5 30.5175 22.92 30.6075 22.42C30.6975 21.93 30.7375 21.52 30.8075 21.04L30.8575 21L30.9075 20.95C31.5475 20.86 31.9575 20.8 32.3775 20.73C32.7975 20.67 33.2275 20.59 33.8875 20.46L33.9175 20.52L33.9375 20.58C33.8175 21.09 33.6875 21.6 33.5675 22.12C33.4475 22.64 33.3275 23.14 33.2075 23.65C32.9675 24.73 32.8675 25.14 32.8075 25.42C32.7575 25.7 32.7375 25.85 32.6375 26.41L32.5775 26.46L32.5175 26.5H32.5275Z" fill="white" />
      <path d="M39.3775 22.68C39.3175 22.96 39.0775 24 38.7475 24.44C38.5175 24.76 38.2475 24.96 37.9375 24.96C37.8475 24.96 37.3175 24.96 37.3075 24.17C37.3075 23.78 37.3775 23.38 37.4775 22.95C37.7575 21.7 38.0975 20.65 38.9475 20.65C39.6175 20.65 39.6575 21.43 39.3775 22.69M42.1875 22.81C42.5675 21.16 42.2775 20.38 41.9075 19.91C41.3475 19.2 40.3575 18.96 39.3275 18.96C38.7075 18.96 37.2475 19.02 36.0975 20.08C35.2775 20.84 34.8875 21.88 34.6575 22.87C34.4275 23.88 34.1575 25.71 35.8375 26.38C36.3575 26.6 37.0975 26.66 37.5775 26.66C38.8075 26.66 40.0675 26.32 41.0075 25.32C41.7375 24.51 42.0775 23.3 42.1875 22.8" fill="white" />
      <path d="M68.4575 26.61C67.1575 26.6 66.7875 26.6 65.5875 26.65L65.5075 26.55C65.8375 25.32 66.1675 24.09 66.4475 22.84C66.8275 21.22 66.9075 20.54 67.0375 19.59L67.1375 19.51C68.4275 19.33 68.7775 19.27 70.1275 19.03L70.1675 19.14C69.9175 20.15 69.6775 21.17 69.4375 22.19C68.9475 24.32 68.7675 25.41 68.5775 26.52L68.4575 26.61Z" fill="white" />
      <path d="M66.5075 22.82C66.4475 23.08 66.1975 24.13 65.8675 24.57C65.6475 24.88 65.1275 25.08 64.8275 25.08C64.7375 25.08 64.2175 25.08 64.1975 24.3C64.1975 23.92 64.2775 23.51 64.3775 23.08C64.6575 21.85 64.9975 20.81 65.8475 20.81C66.5175 20.81 66.8075 21.57 66.5175 22.83M69.0775 22.95C69.4575 21.31 67.9375 22.81 67.6975 22.26C67.3275 21.41 67.5575 19.7 66.0675 19.12C65.4975 18.9 64.1475 19.19 62.9975 20.24C62.1775 21 61.7975 22.02 61.5675 23.01C61.3375 24.01 61.0675 25.83 62.7375 26.48C63.2675 26.7 63.7475 26.77 64.2275 26.75C65.9075 26.66 67.1775 24.13 68.1275 23.13C68.8575 22.34 68.9875 23.43 69.0975 22.95" fill="white" />
      <path d="M49.5275 26.5C48.4475 26.49 48.0875 26.49 46.8175 26.55L46.7675 26.46C46.8775 25.98 46.9975 25.51 47.1075 25.03L47.2575 24.38C47.4875 23.36 47.7175 22.18 47.7475 21.82C47.7675 21.6 47.8375 21.06 47.2275 21.06C46.9575 21.06 46.6975 21.19 46.4175 21.31C46.2675 21.85 45.9575 23.37 45.8075 24.07C45.4975 25.53 45.4775 25.7 45.3375 26.42L45.2475 26.51C44.1375 26.5 43.7575 26.5 42.4875 26.56L42.4275 26.45C42.6375 25.58 42.8475 24.71 43.0475 23.84C43.5775 21.49 43.7075 20.59 43.8575 19.39L43.9575 19.32C45.1975 19.15 45.4975 19.11 46.8475 18.83L46.9575 18.96L46.7675 19.71C46.9875 19.58 47.2175 19.44 47.4375 19.32C48.0675 19.01 48.7775 18.92 49.1575 18.92C49.7475 18.92 50.3875 19.09 50.6675 19.77C50.9175 20.38 50.7475 21.13 50.4075 22.6L50.2375 23.35C49.8875 24.99 49.8275 25.29 49.6475 26.42L49.5175 26.51L49.5275 26.5Z" fill="white" />
      <path d="M58.8375 13.63L57.9475 13.64C55.6275 13.67 54.6975 13.65 54.3075 13.61C54.2675 13.78 54.2075 14.08 54.2075 14.08L53.3775 17.94C53.3775 17.94 51.3875 26.14 51.2975 26.53C53.3275 26.51 54.1575 26.51 54.5075 26.54C54.5875 26.15 55.0575 23.86 55.0575 23.86C55.0575 23.86 55.4575 22.18 55.4875 22.12C55.4875 22.12 55.6075 21.95 55.7375 21.88H55.9175C57.6675 21.88 59.6475 21.88 61.1875 20.74C62.2375 19.96 62.9675 18.81 63.2775 17.41C63.3675 17.07 63.4275 16.65 63.4275 16.25C63.4275 15.71 63.3175 15.18 63.0075 14.77C62.2175 13.66 60.6475 13.65 58.8275 13.64M59.9875 17.66C59.7975 18.51 59.2475 19.24 58.5275 19.58C57.9375 19.88 57.2175 19.9 56.4775 19.9H55.9975L56.0375 19.71C56.0375 19.71 56.9275 15.86 56.9175 15.87L56.9475 15.67L56.9675 15.52L57.3175 15.56C57.3175 15.56 59.1375 15.72 59.1875 15.72C59.9075 15.99 60.2075 16.72 59.9975 17.66" fill="white" />
      <path d="M79.0775 19.02L78.9775 18.91C77.6575 19.17 77.4075 19.22 76.1875 19.38L76.0975 19.47C76.0975 19.47 76.0975 19.51 76.0875 19.53V19.51C75.1775 21.61 75.1975 21.15 74.4575 22.8C74.4575 22.72 74.4575 22.67 74.4575 22.6L74.2775 19.03L74.1575 18.92C72.7675 19.18 72.7375 19.23 71.4475 19.39L71.3475 19.48C71.3475 19.48 71.3375 19.57 71.3275 19.62V19.64C71.4975 20.46 71.4575 20.28 71.6175 21.57C71.6975 22.2 71.7875 22.85 71.8675 23.47C71.9975 24.52 72.0675 25.04 72.2175 26.64C71.3575 28.07 71.1475 28.62 70.3175 29.87L70.3575 29.98C71.6075 29.93 71.8975 29.93 72.8275 29.93L73.0275 29.7C73.7275 28.19 79.0675 19.02 79.0675 19.02" fill="white" />
      <path d="M33.7075 19.91C34.4175 19.42 34.5075 18.73 33.9075 18.38C33.2975 18.02 32.2375 18.14 31.5275 18.63C30.8075 19.12 30.7275 19.8 31.3275 20.16C31.9275 20.51 32.9875 20.41 33.7075 19.91Z" fill="white" />
      <path d="M72.9375 29.82L71.8975 31.61C71.5675 32.22 70.9575 32.68 69.9775 32.68L68.3175 32.65L68.7975 31.04H69.1175C69.2875 31.04 69.4175 31.03 69.5075 30.98C69.5875 30.95 69.6475 30.89 69.7175 30.79L70.3275 29.81H72.9275L72.9375 29.82Z" fill="white" />
    </svg>
  )
}

interface DinersClubCardIconProps {
  size?: number
}

export const DinersClubCardIcon: React.FC<DinersClubCardIconProps> = ({ size = 43 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 43 37" fill="none">
      <path fillRule="evenodd" clip-rule="evenodd" d="M18.404 36.268C8.309 36.314 0 28.187 0 18.292C0 7.478 8.309 -0.0019996 18.404 4.01187e-07H23.136C33.111 -0.0019996 42.216 7.474 42.216 18.292C42.216 28.182 33.111 36.268 23.136 36.268H18.404Z" fill="#004C97" />
      <path fillRule="evenodd" clip-rule="evenodd" d="M18.404 36.268C8.309 36.314 0 28.187 0 18.292C0 7.478 8.309 -0.0019996 18.404 4.01187e-07H18.669C28.643 -0.0019996 37.376 7.474 37.376 18.292C37.376 28.182 28.643 36.268 18.669 36.268H18.404Z" fill="#004C97" />
      <path fillRule="evenodd" clip-rule="evenodd" d="M18.445 1.50049C9.21999 1.50349 1.745 8.93349 1.745 18.1025C1.745 27.2695 9.21999 34.6985 18.445 34.6995C27.671 34.6995 35.147 27.2695 35.15 18.1025C35.147 8.93249 27.67 1.50249 18.445 1.50049Z" fill="#FEFEFE" />
      <path fillRule="evenodd" clip-rule="evenodd" d="M14.653 27.9185V8.28249C10.683 9.80249 7.868 13.6205 7.858 18.1025C7.868 22.5825 10.684 26.4025 14.653 27.9185ZM29.034 18.1025C29.026 13.6185 26.207 9.79549 22.233 8.28049V27.9235C26.207 26.4065 29.027 22.5875 29.034 18.1025Z" fill="#004C97" />
    </svg>
  )
}

interface CreditCardChipIconProps {
  size?: number
  className?: string
}

export const CreditCardChipIcon: React.FC<CreditCardChipIconProps> = ({ size = 41, className }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} viewBox="0 0 41 30" fill="none" className={className}>
      <path d="M35.31 1H5.92C3.20276 1 1 3.20276 1 5.92V24.32C1 27.0372 3.20276 29.24 5.92 29.24H35.31C38.0272 29.24 40.23 27.0372 40.23 24.32V5.92C40.23 3.20276 38.0272 1 35.31 1Z" fill="url(#paint0_linear_16_7)" stroke="#303030" strokeMiterlimit="10" />
      <path d="M1 10.41H40.23" stroke="#303030" strokeMiterlimit="10" />
      <path d="M40.23 19.83H1" stroke="#303030" strokeMiterlimit="10" />
      <path d="M25.37 20.69C24.94 23.23 22.59 27.72 20.61 27.7C18.64 27.72 16.29 23.23 15.85 20.69C15.68 19.66 16.49 17.39 17.01 16.09C17.26 15.46 17.26 14.77 17.01 14.14C16.49 12.84 15.68 10.57 15.85 9.54C16.28 7 18.63 2.51 20.61 2.53C22.59 2.51 24.94 7 25.37 9.54C25.54 10.57 24.73 12.84 24.21 14.14C23.96 14.77 23.96 15.46 24.21 16.09C24.73 17.39 25.54 19.66 25.37 20.69Z" fill="#D9D3AF" stroke="#303030" strokeMiterlimit="10" />
      <defs>
        <linearGradient id="paint0_linear_16_7" x1="33.44" y1="4.49" x2="-17.73" y2="46.91" gradientUnits="userSpaceOnUse">
          <stop stopColor="#D9D3AF" />
          <stop offset="0.32" stopColor="#C7C090" />
          <stop offset="0.53" stopColor="#BFB782" />
        </linearGradient>
      </defs>
    </svg>
  )
}

interface LongYellowLineProps {
  size?: number
  className?: string
  strokeWidth?: number
}

export const LongYellowLine: React.FC<LongYellowLineProps> = ({ size, className, strokeWidth = 2.5 }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" className={className} width={size} viewBox="0 0 147 5" fill="none">
      <path d="M1.25 1.25C3.81 1.25 3.81 3.25 6.38 3.25C8.95 3.25 8.94 1.25 11.51 1.25C14.08 1.25 14.07 3.25 16.64 3.25C19.21 3.25 19.2 1.25 21.77 1.25C24.34 1.25 24.33 3.25 26.9 3.25C29.47 3.25 29.46 1.25 32.03 1.25C34.6 1.25 34.59 3.25 37.16 3.25C39.73 3.25 39.73 1.25 42.29 1.25C44.85 1.25 44.85 3.25 47.42 3.25C49.99 3.25 49.98 1.25 52.55 1.25C55.12 1.25 55.11 3.25 57.68 3.25C60.25 3.25 60.25 1.25 62.81 1.25C65.37 1.25 65.37 3.25 67.94 3.25C70.51 3.25 70.51 1.25 73.07 1.25C75.63 1.25 75.64 3.25 78.2 3.25C80.76 3.25 80.77 1.25 83.33 1.25C85.89 1.25 85.89 3.25 88.46 3.25C91.03 3.25 91.03 1.25 93.59 1.25C96.15 1.25 96.15 3.25 98.72 3.25C101.29 3.25 101.29 1.25 103.85 1.25C106.41 1.25 106.42 3.25 108.98 3.25C111.54 3.25 111.55 1.25 114.11 1.25C116.67 1.25 116.68 3.25 119.24 3.25C121.8 3.25 121.81 1.25 124.37 1.25C126.93 1.25 126.94 3.25 129.5 3.25C132.06 3.25 132.07 1.25 134.64 1.25C137.21 1.25 137.21 3.25 139.78 3.25C142.35 3.25 142.35 1.25 144.92 1.25" stroke="#F8AE15" strokeWidth={strokeWidth} strokeMiterlimit="10" strokeLinecap="round" />
    </svg>
  )
}